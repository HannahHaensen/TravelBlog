var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.77,1,0.838]],["body/injectables/ApiService.html",[0,0.767,1,0.835,2,1.314,3,0.17,4,0.145,5,0.145,6,1.182,7,2.039,8,0.224,9,0.703,10,1.18,11,2.465,12,0.703,13,2.296,14,3.137,15,2.619,16,3.137,17,2.768,18,3.137,19,3.137,20,3.137,21,2.768,22,2.619,23,0.589,24,2.039,25,3.287,26,1.464,27,1.591,28,1.54,29,1.05,30,0.778,31,3.137,32,2.058,33,2.022,34,2.022,35,2.022,36,2.768,37,0.907,38,1.522,39,0.033,40,0.986,41,0.593,42,1.18,43,1.264,44,2.988,45,2.022,46,2.022,47,2.022,48,1.017,49,2.022,50,2.039,51,1.649,52,0.938,53,2.244,54,2.022,55,0.888,56,2.039,57,2.022,58,2.039,59,2.039,60,1.818,61,2.022,62,1.54,63,2.022,64,2.489,65,2.039,66,2.022,67,2.022,68,2.022,69,2.022,70,2.768,71,2.022,72,2.489,73,1.833,74,1.818,75,2.022,76,2.022,77,2.022,78,1.492,79,2.039,80,2.022,81,2.039,82,2.039,83,2.022,84,2.039,85,1.348,86,0.695,87,2.022,88,2.022,89,1.818,90,2.022,91,0.439,92,0.145,93,1.504,94,1.182,95,1.314,96,1.314,97,1.072,98,1.314,99,1.182,100,0.695,101,0.695,102,0.821,103,0.358,104,0.109,105,1.182,106,1.314,107,1.182,108,1.182,109,1.072,110,2.022,111,0.64,112,1.182,113,1.314,114,0.821,115,1.162,116,1.818,117,1.818,118,2.465,119,2.022,120,1.264,121,0.59,122,1.788,123,1.314,124,2.022,125,3.393,126,1.314,127,1.314,128,1.314,129,1.314,130,1.314,131,2.465,132,1.314,133,2.022,134,2.022,135,1.314,136,1.314,137,1.314,138,1.314,139,2.022,140,1.314,141,1.314,142,1.314,143,2.022,144,2.022,145,2.216,146,1.818,147,1.182,148,1.182,149,1.314,150,1.314,151,1.818,152,2.022,153,1.314,154,1.314,155,1.314,156,1.314,157,1.314,158,1.314,159,1.314,160,1.314,161,1.314,162,1.314,163,0.755,164,0.01,165,0.015,166,0.01]],["title/components/AppComponent.html",[167,0.39,168,0.838]],["body/components/AppComponent.html",[3,0.312,4,0.265,5,0.265,8,0.411,9,1.082,30,0.518,39,0.032,40,0.903,41,0.411,48,0.995,55,0.576,85,0.914,86,1.275,91,0.312,92,0.265,103,0.312,104,0.095,164,0.018,165,0.024,166,0.018,167,0.662,168,1.502,169,1.645,170,1.385,171,1.385,172,1.385,173,1.385,174,3.12,175,1.275,176,2.358,177,2.018,178,2.796,179,1.787,180,5.342,181,1.787,182,4.824,183,2.56,184,1.773,185,4.824,186,3.738,187,4.824,188,1.081,189,1.787,190,1.787,191,1.385,192,2.091,193,1.385,194,1.385,195,0.995,196,1.787,197,0.995,198,1.385,199,0.995,200,1.385,201,0.995,202,1.385,203,0.995,204,1.385,205,0.995,206,1.082,207,0.995,208,1.385,209,0.995,210,1.174,211,1.385,212,0.995,213,0.995,214,1.385,215,1.385]],["title/modules/AppModule.html",[216,1.655,217,2.03]],["body/modules/AppModule.html",[1,1.494,3,0.25,4,0.213,5,0.213,26,1.42,27,1.542,29,1.373,39,0.033,91,0.535,92,0.213,93,1.995,101,1.631,102,1.208,103,0.25,104,0.076,164,0.015,165,0.021,166,0.015,168,1.636,177,0.942,188,0.867,201,1.494,203,1.494,209,1.494,210,0.942,216,1.577,217,4.172,218,1.577,219,1.739,220,3.471,221,2.715,222,3.471,223,1.934,224,2.504,225,2.504,226,2.504,227,2.504,228,2.504,229,3.255,230,3.255,231,3.255,232,3.027,233,3.022,234,2.178,235,1.934,236,3,237,3.022,238,4.163,239,3.475,240,2.178,241,3.022,242,3.475,243,2.178,244,3,245,3,246,3,247,2.178,248,3,249,3,250,3,251,3,252,2.178,253,1.577,254,1.316,255,4.163,256,4.781,257,3,258,3,259,3,260,3,261,4.163,262,3,263,3,264,3,265,3,266,3,267,4.163,268,4.163,269,4.163,270,2.413]],["title/modules/AppRoutingModule.html",[216,1.655,229,1.825]],["body/modules/AppRoutingModule.html",[3,0.391,4,0.333,5,0.333,39,0.032,91,0.463,92,0.333,103,0.391,104,0.119,164,0.023,165,0.027,166,0.023,218,2.464,223,3.022,229,3.217,237,3.403,241,4.029,252,4.029,253,2.464,271,4.688,272,4.688,273,3.811,274,2.247,275,4.688]],["title/guards/AuthGuardService.html",[276,2.03,277,2.03]],["body/guards/AuthGuardService.html",[0,1.2,3,0.32,4,0.273,5,0.273,8,0.422,10,0.861,12,1.101,23,0.592,29,1.473,30,0.681,38,1.42,39,0.033,40,0.919,41,0.539,42,1.101,52,0.654,53,2.005,91,0.476,92,0.273,100,1.31,102,1.547,103,0.32,104,0.098,121,1.111,122,1.542,164,0.019,165,0.024,166,0.019,210,1.206,253,2.019,270,2.227,277,3.165,278,3.841,279,4.517,280,3.207,281,5.702,282,3.841,283,5.114,284,3.841,285,4.909,286,5.702,287,5.411,288,5.702,289,3.841,290,2.788,291,4.909,292,3.165,293,3.207,294,1.206,295,3.841,296,3.841,297,3.841,298,3.207,299,3.207,300,2.788,301,3.207,302,3.841,303,3.841,304,2.019]],["title/injectables/AuthService.html",[0,0.77,29,0.77]],["body/injectables/AuthService.html",[0,1.093,2,2.147,3,0.278,4,0.236,5,0.236,8,0.366,10,0.747,12,1.003,23,0.513,29,1.093,30,0.803,37,1.46,38,1.293,39,0.033,40,0.837,41,0.491,42,1.003,52,0.958,91,0.45,92,0.236,103,0.278,104,0.085,111,1.859,121,0.963,122,1.585,164,0.016,165,0.022,166,0.016,178,1.931,253,1.751,254,1.462,283,4.837,292,3.628,293,3.733,300,3.917,301,2.781,304,1.751,305,2.781,306,6.017,307,5.396,308,5.396,309,3.917,310,3.332,311,1.695,312,3.332,313,3.332,314,4.504,315,4.472,316,4.472,317,4.472,318,1.976,319,3.332,320,3.246,321,4.472,322,4.472,323,3.733,324,3.332,325,4.472,326,3.332,327,3.332,328,4.472,329,4.472,330,1.597,331,2.147,332,3.332,333,2.418,334,2.147,335,3.332,336,3.332,337,3.332,338,4.472,339,3.332,340,3.332,341,3.332,342,3.332]],["title/injectables/BlogService.html",[0,0.77,311,0.989]],["body/injectables/BlogService.html",[0,0.927,2,1.695,3,0.219,4,0.187,5,0.187,8,0.289,9,0.85,10,1.206,12,0.85,23,0.685,30,0.833,37,0.76,38,1.493,39,0.033,40,0.967,41,0.645,42,1.158,48,0.699,52,0.915,53,1.912,55,0.941,62,2.08,78,1.431,85,1.435,86,0.897,91,0.371,92,0.187,100,0.897,103,0.371,104,0.097,111,1.621,114,1.059,115,0.974,164,0.013,165,0.019,166,0.013,178,1.524,183,1.26,206,0.85,213,0.699,311,1.191,318,1.834,331,1.695,334,3.138,343,1.695,344,3.229,345,3.229,346,2.867,347,3.792,348,3.792,349,3.534,350,3.792,351,3.792,352,3.792,353,2.629,354,2.753,355,2.629,356,2.753,357,2.629,358,2.753,359,2.629,360,2.753,361,2.629,362,2.753,363,2.629,364,2.753,365,2.629,366,4.119,367,2.629,368,2.629,369,2.578,370,3.534,371,3.534,372,2.629,373,2.629,374,2.629,375,1.908,376,1.908,377,1.524,378,2.198,379,1.695,380,1.695,381,1.908,382,1.908,383,1.26,384,1.382,385,1.695,386,1.695,387,1.908,388,1.695,389,1.908,390,1.908,391,1.695,392,1.908,393,1.908,394,1.908,395,1.695,396,1.908,397,2.753,398,2.753,399,2.753,400,1.908,401,3.534,402,3.534,403,1.908,404,2.753,405,2.753,406,1.908,407,1.908,408,1.908,409,1.524]],["title/modules/DashboardModule.html",[216,1.655,230,1.825]],["body/modules/DashboardModule.html",[3,0.291,4,0.248,5,0.248,39,0.033,55,0.538,91,0.529,92,0.248,103,0.291,104,0.089,164,0.017,165,0.023,166,0.017,184,1.623,188,1.01,195,1.563,197,1.563,199,1.563,205,1.563,206,1.035,207,1.563,212,1.563,216,1.836,218,1.836,219,2.024,220,3.752,221,1.836,222,3.35,223,2.251,230,3.745,233,3.35,234,2.535,235,2.251,237,2.535,241,3.35,242,3.852,243,2.535,252,2.535,253,1.836,277,2.975,410,2.915,411,2.915,412,3.404,413,3.493,414,4.615,415,2.915,416,3.493,417,3.493,418,3.493,419,3.493,420,3.493,421,3.493,422,3.493,423,2.535,424,3.493,425,2.535,426,4.615,427,2.535,428,2.535,429,3.493,430,3.493]],["title/classes/Entry.html",[55,0.485,104,0.08]],["body/classes/Entry.html",[0,1.005,3,0.246,4,0.209,5,0.209,8,0.324,9,0.922,10,0.922,23,0.454,30,0.81,37,0.852,39,0.033,41,0.642,42,1.375,53,1.754,55,0.882,62,1.656,78,1.26,85,1.529,91,0.395,92,0.209,100,1.005,103,0.395,104,0.105,111,1.487,114,1.908,115,1.754,164,0.015,165,0.02,166,0.015,178,1.708,183,2.27,206,0.922,213,1.26,311,0.925,331,1.899,334,3.052,343,1.899,344,2.138,345,2.138,346,1.899,349,2.138,354,2.138,356,2.138,358,2.138,360,2.138,362,2.138,364,2.138,366,4.053,369,2.383,370,3.437,371,3.437,375,2.138,376,2.138,377,2.745,378,3.124,379,1.899,380,3.052,381,3.437,382,2.138,383,1.412,384,1.548,385,1.899,386,1.899,387,2.138,388,1.899,389,2.138,390,2.138,391,1.899,392,2.138,393,2.138,394,2.138,395,1.899,396,2.138,397,2.984,398,2.984,399,2.984,400,2.138,401,3.72,402,3.72,403,2.138,404,2.984,405,2.984,406,2.138,407,2.138,408,2.138,409,1.708,431,1.708,432,2.946,433,2.946,434,2.946,435,2.946,436,2.946,437,2.946,438,2.946,439,2.946]],["title/components/EntryComponent.html",[167,0.39,195,0.838]],["body/components/EntryComponent.html",[1,1.052,3,0.146,4,0.124,5,0.124,8,0.192,9,0.625,10,0.967,12,0.625,13,2.154,22,1.463,23,0.534,26,1.643,27,1.465,30,0.772,32,2.397,37,1.49,38,1.143,39,0.033,40,0.86,41,0.602,42,0.886,43,1.123,48,0.466,52,0.82,55,0.953,62,1.123,73,1.336,78,1.37,85,1.055,86,0.95,89,2.291,91,0.36,92,0.124,101,0.95,103,0.146,104,0.088,114,1.123,115,0.649,120,1.851,121,0.507,163,1.598,164,0.009,165,0.014,166,0.009,167,0.569,168,0.466,169,0.95,170,1.598,171,0.649,172,0.649,173,0.649,175,0.598,176,2.032,177,1.722,179,1.032,181,1.032,183,1.336,184,1.242,188,0.507,189,1.032,190,1.032,191,0.649,192,1.465,193,0.649,194,0.649,195,1.052,196,1.032,197,0.466,198,0.649,199,0.466,200,0.649,201,0.466,202,0.649,203,0.466,204,0.649,205,0.466,206,0.625,207,0.466,208,0.649,209,0.466,210,0.55,211,0.649,212,0.466,213,0.741,214,0.649,215,0.649,221,0.921,254,0.769,270,1.615,274,1.336,292,1.129,294,0.875,304,1.465,311,1.242,314,1.463,318,1.705,330,0.84,346,1.129,377,1.016,378,1.016,379,1.129,380,1.129,383,1.895,386,1.129,388,1.796,409,1.016,440,1.463,441,1.397,442,2.896,443,2.326,444,3.469,445,2.518,446,2.896,447,4.314,448,2.023,449,2.326,450,4.594,451,3.912,452,1.735,453,2.326,454,3.835,455,1.796,456,1.129,457,2.896,458,3.3,459,2.786,460,2.023,461,2.023,462,2.023,463,2.023,464,2.023,465,2.326,466,2.326,467,1.752,468,2.326,469,1.752,470,2.326,471,2.87,472,2.326,473,4.3,474,1.752,475,2.326,476,3.3,477,1.752,478,1.752,479,2.786,480,2.786,481,1.752,482,2.786,483,2.786,484,2.326,485,1.752,486,2.326,487,3.3,488,2.326,489,2.326,490,1.752,491,1.752,492,1.752,493,3.3,494,3.469,495,2.786,496,2.896,497,2.326,498,2.326,499,1.752,500,2.786,501,2.786,502,2.518,503,1.796,504,1.752,505,2.326,506,1.752,507,1.752,508,1.752,509,1.463,510,1.752,511,1.752,512,2.786,513,1.752,514,2.896,515,1.752,516,1.752,517,1.752,518,1.463,519,1.752,520,1.752,521,1.752,522,1.752,523,1.752,524,1.752,525,1.752,526,1.752,527,1.752,528,1.752,529,1.752,530,1.752,531,1.752,532,1.752,533,1.752,534,1.796,535,1.463,536,1.463,537,2.326,538,1.752,539,1.752,540,1.752,541,1.752,542,1.752,543,2.786,544,2.786,545,2.786,546,2.786,547,2.786,548,1.463,549,0.921,550,1.463,551,1.463,552,1.272,553,2.023,554,1.463,555,1.752,556,1.272,557,1.752,558,1.752,559,1.752,560,1.752]],["title/components/EntryHeaderComponent.html",[167,0.39,197,0.838]],["body/components/EntryHeaderComponent.html",[3,0.213,4,0.182,5,0.182,8,0.281,9,0.834,12,0.834,23,0.675,30,0.796,38,0.74,39,0.033,40,0.82,41,0.561,42,0.574,43,1.031,48,0.681,52,0.633,55,0.943,85,1.071,86,1.494,91,0.213,92,0.182,103,0.213,104,0.065,115,2.127,120,1.031,122,0.803,164,0.013,165,0.018,166,0.013,167,0.543,168,0.681,169,1.268,170,0.948,171,0.948,172,0.948,173,0.948,175,0.872,176,2.213,177,1.876,179,1.377,181,1.377,183,2.953,184,1.168,188,0.74,189,1.377,190,1.377,191,0.948,192,1.781,193,0.948,194,0.948,195,0.681,196,1.377,197,1.279,198,0.948,199,0.681,200,0.948,201,0.681,202,0.948,203,0.681,204,0.948,205,0.681,206,0.982,207,0.681,208,0.948,209,0.681,210,0.803,211,0.948,212,0.681,213,0.681,214,0.948,215,0.948,292,2.396,294,1.168,318,1.268,378,2.787,428,4.234,441,1.764,445,3.179,451,2.699,452,2.11,455,2.396,503,3.292,505,3.656,549,2.302,561,4.869,562,2.135,563,4.013,564,4.38,565,3.718,566,4.38,567,5.107,568,3.103,569,4.38,570,3.103,571,2.558,572,2.558,573,2.558,574,4.807,575,4.013,576,2.558,577,3.718,578,2.558,579,3.656,580,2.558,581,3.103,582,2.558,583,2.558,584,2.558,585,2.558,586,4.38,587,3.103,588,3.718,589,2.558,590,2.558,591,3.718,592,3.103,593,2.135,594,2.558,595,2.135,596,2.135,597,3.103,598,3.718,599,2.558,600,1.483]],["title/interceptors/ErrorInterceptor.html",[231,1.825,232,1.655]],["body/interceptors/ErrorInterceptor.html",[0,1.117,1,1.454,3,0.287,4,0.244,5,0.244,8,0.378,9,1.024,10,1.024,12,1.024,23,0.53,26,1.864,27,2.025,28,1.84,29,1.336,30,0.711,38,1.321,39,0.033,40,0.855,41,0.563,42,1.024,48,0.915,52,0.585,53,1.9,72,2.648,86,1.173,91,0.498,92,0.244,93,1.649,94,1.994,97,1.808,99,1.994,100,1.173,101,1.173,103,0.287,104,0.088,121,0.995,122,1.435,145,1.994,147,2.648,148,1.994,151,1.994,163,2.025,164,0.017,165,0.023,166,0.017,231,2.648,254,1.509,274,1.649,290,3.723,294,1.08,309,2.497,600,2.973,601,2.871,602,4.562,603,2.871,604,5.129,605,3.813,606,2.497,607,4.568,608,3.813,609,4.562,610,4.562,611,3.439,612,2.871,613,2.871,614,2.871,615,3.813,616,2.871,617,3.439,618,4.568,619,3.439,620,3.439,621,4.568,622,2.217,623,2.497,624,2.497,625,3.439,626,3.439,627,3.439]],["title/pipes/FilterPipe.html",[412,1.825,628,1.825]],["body/pipes/FilterPipe.html",[3,0.324,4,0.276,5,0.276,12,0.871,30,0.538,38,1.123,39,0.033,40,1.107,41,0.426,42,0.871,43,1.991,52,0.661,91,0.324,92,0.276,103,0.324,104,0.099,115,1.438,116,2.251,117,2.251,122,1.708,164,0.019,165,0.024,166,0.019,175,1.324,213,1.315,274,1.861,294,1.219,412,2.865,628,3.318,629,3.883,630,3.241,631,5.912,632,4.943,633,5.725,634,4.126,635,5.438,636,4.943,637,4.935,638,3.883,639,4.943,640,4.943,641,4.943,642,4.943,643,5.438,644,4.943,645,3.883,646,3.883,647,3.883,648,4.943,649,3.883,650,3.883,651,3.883,652,3.883]],["title/components/HomeComponent.html",[167,0.39,199,0.838]],["body/components/HomeComponent.html",[1,1.301,3,0.221,4,0.188,5,0.188,8,0.291,9,0.856,10,1.096,12,0.856,13,1.414,23,0.688,28,2.173,29,1.195,30,0.678,32,2.726,37,1.645,38,0.767,39,0.033,40,0.837,41,0.491,42,0.595,43,1.537,52,0.451,55,0.798,62,2.239,73,1.829,78,1.189,85,0.933,91,0.408,92,0.188,102,1.068,103,0.221,104,0.068,111,1.198,112,1.537,114,1.068,120,1.801,121,0.767,163,1.919,164,0.013,165,0.019,166,0.013,167,0.642,168,0.706,169,1.301,170,0.983,171,0.983,172,0.983,173,0.983,175,0.904,176,2.229,177,1.906,179,1.414,181,1.414,184,1.198,188,0.767,189,1.414,190,1.414,191,0.983,192,1.811,193,0.983,194,0.983,195,0.706,196,1.414,197,0.706,198,0.983,199,1.301,200,0.983,201,0.706,202,0.983,203,0.706,204,0.983,205,0.706,206,0.856,207,0.706,208,0.983,209,0.706,210,0.833,211,0.983,212,0.706,213,0.706,214,0.983,215,0.983,254,1.164,274,1.271,276,2.46,294,1.198,298,3.185,311,1.535,318,0.904,320,2.77,330,1.271,333,3.549,383,1.829,391,1.709,441,1.801,452,2.145,456,1.709,460,2.77,461,2.77,462,2.77,463,2.77,464,2.77,549,2.006,624,1.925,628,2.212,634,3.185,637,4.324,653,2.214,654,5.18,655,3.816,656,4.47,657,3.816,658,3.816,659,3.816,660,2.652,661,3.816,662,2.652,663,2.652,664,2.652,665,2.652,666,2.652,667,2.652,668,3.816,669,3.816,670,2.652,671,2.214,672,2.214,673,2.214]],["title/interceptors/Interceptor.html",[232,2.262]],["body/interceptors/Interceptor.html",[0,1.205,3,0.322,4,0.274,5,0.274,8,0.425,10,0.867,12,1.105,23,0.595,28,1.986,29,1.397,30,0.683,38,1.425,39,0.033,40,0.923,41,0.541,42,1.105,52,0.658,53,2.011,64,2.241,91,0.504,92,0.274,93,1.853,97,2.032,100,1.318,103,0.322,104,0.099,121,1.118,122,1.214,164,0.019,165,0.024,166,0.019,232,2.591,290,3.94,294,1.214,311,1.927,330,1.853,333,2.806,601,3.227,605,4.115,606,2.806,608,4.115,609,4.771,610,4.771,612,4.115,614,3.227,615,4.115,616,3.227,674,3.227,675,3.866,676,3.866,677,3.866,678,4.93,679,3.227,680,3.866,681,3.866,682,3.866,683,3.866,684,3.866,685,3.866,686,3.866]],["title/components/LoginComponent.html",[167,0.39,201,0.838]],["body/components/LoginComponent.html",[1,1.272,3,0.211,4,0.18,5,0.18,8,0.278,9,0.827,10,0.976,12,0.827,13,2.209,23,0.39,26,1.631,27,1.772,28,1.753,29,1.169,30,0.736,37,1.258,38,0.731,39,0.033,40,0.815,41,0.405,42,0.567,48,0.673,51,2.789,52,0.741,55,0.39,78,1.458,86,0.863,91,0.424,92,0.18,101,0.863,102,1.019,103,0.211,104,0.064,105,2.772,107,1.466,108,1.466,121,0.731,122,0.794,163,1.366,164,0.012,165,0.018,166,0.012,167,0.539,168,0.673,169,1.258,170,0.937,171,0.937,172,0.937,173,0.937,175,0.863,176,2.209,177,1.872,179,1.366,181,1.366,184,1.158,188,0.731,189,1.366,190,1.366,191,0.937,192,1.772,193,0.937,194,0.937,195,0.673,196,1.366,197,0.673,198,0.937,199,0.673,200,0.937,201,1.272,202,0.937,203,0.673,204,0.937,205,0.673,206,0.827,207,0.673,208,0.937,209,0.673,210,0.794,211,0.937,212,0.673,213,0.673,214,0.937,215,0.937,254,1.11,270,2.138,274,1.213,294,1.158,300,4.327,311,1.502,318,1.734,330,1.213,395,1.631,441,1.753,452,2.098,456,1.631,534,1.631,549,1.938,613,3.078,622,1.631,623,1.836,671,2.112,672,3.078,687,2.112,688,4.351,689,3.688,690,4.351,691,5.615,692,3.688,693,2.53,694,2.53,695,2.53,696,2.53,697,5.307,698,3.688,699,5.084,700,5.084,701,2.53,702,2.53,703,2.53,704,2.53,705,2.53,706,2.53,707,2.53,708,3.078,709,2.53,710,2.53,711,2.53,712,2.53,713,2.53,714,2.53,715,3.688,716,3.688,717,3.078,718,3.688,719,2.53,720,2.112,721,2.112]],["title/components/NavigationComponent.html",[167,0.39,203,0.838]],["body/components/NavigationComponent.html",[1,1.2,3,0.187,4,0.159,5,0.159,8,0.246,9,0.757,10,0.909,12,0.757,13,2.056,23,0.346,26,1.538,27,1.671,28,1.359,29,1.103,30,0.796,37,0.649,38,1.173,39,0.033,40,0.905,41,0.579,42,0.909,48,0.597,51,2.371,52,0.823,55,0.346,78,1.079,85,1.103,86,0.765,91,0.424,92,0.159,101,1.151,102,0.904,103,0.187,104,0.103,111,1.274,120,1.359,121,0.649,122,0.705,163,1.502,164,0.011,165,0.017,166,0.011,167,0.502,168,0.597,169,1.151,170,1.792,171,0.831,172,0.831,173,0.831,175,0.765,176,2.155,177,1.827,179,1.25,181,1.25,184,1.06,188,0.649,189,1.25,190,1.25,191,0.831,192,1.671,193,0.831,194,0.831,195,0.597,196,1.25,197,0.597,198,0.831,199,0.597,200,0.831,201,0.597,202,0.831,203,1.2,204,0.831,205,0.597,206,1.139,207,0.597,208,0.831,209,0.597,210,0.705,211,0.831,212,0.597,213,0.597,214,0.831,215,0.831,221,1.179,254,0.985,274,1.076,304,1.774,309,3.274,311,0.705,318,1.85,330,1.076,383,1.617,385,1.446,441,0.904,446,3.385,449,2.817,453,2.817,454,2.817,455,2.175,457,3.385,458,3.765,472,2.817,473,4.631,475,2.817,476,3.765,484,2.817,486,2.817,487,3.765,488,2.817,489,2.817,493,2.817,496,3.385,497,2.817,498,2.817,502,2.944,503,2.175,534,1.446,535,1.873,536,1.873,537,2.817,549,1.179,556,1.629,570,2.817,575,2.817,593,1.873,600,1.956,606,1.629,622,1.446,623,1.629,624,1.629,679,1.873,708,1.873,717,2.817,722,1.873,723,3.374,724,4.055,725,3.374,726,4.055,727,4.055,728,4.511,729,4.511,730,4.055,731,3.374,732,2.244,733,2.244,734,2.244,735,2.244,736,2.244,737,2.244,738,2.244,739,2.244,740,2.244,741,2.244,742,2.244,743,2.244,744,2.244,745,2.244,746,2.244,747,3.374,748,2.244,749,2.244,750,2.244,751,2.244,752,2.244,753,2.244,754,2.244,755,2.244,756,3.374,757,3.374,758,3.374,759,2.244,760,3.374,761,2.244,762,3.374,763,2.244,764,1.873,765,3.374,766,1.873,767,2.244,768,2.244,769,2.244,770,1.873,771,1.873]],["title/components/NewEntryComponent.html",[167,0.39,205,0.838]],["body/components/NewEntryComponent.html",[1,1.202,3,0.188,4,0.16,5,0.16,8,0.247,9,0.759,10,1.013,12,0.759,13,2.129,15,3.772,23,0.626,26,1.8,27,1.674,30,0.732,32,2.603,37,1.57,38,0.978,39,0.033,40,0.846,41,0.446,42,0.759,43,1.363,48,0.9,52,0.769,55,0.907,73,1.622,78,0.9,85,0.994,86,1.154,91,0.377,92,0.16,101,0.768,103,0.188,104,0.057,120,1.82,121,0.651,163,1.795,164,0.011,165,0.017,166,0.011,167,0.504,168,0.599,169,1.154,170,0.834,171,0.834,172,0.834,173,0.834,175,0.768,176,2.156,177,1.828,179,1.254,181,1.254,183,2.166,184,1.063,188,0.651,189,1.254,190,1.254,191,0.834,192,1.674,193,0.834,194,0.834,195,0.599,196,1.254,197,0.599,198,0.834,199,0.599,200,0.834,201,0.599,202,0.834,203,0.599,204,0.834,205,1.202,206,1.354,207,0.599,208,0.834,209,0.599,210,0.707,211,0.834,212,0.599,213,1.202,214,0.834,215,0.834,254,0.988,294,1.063,304,1.779,311,1.419,318,1.735,330,1.08,377,2.619,383,1.622,423,3.941,441,1.637,442,3.393,443,2.825,445,2.95,448,2.456,451,3.28,452,1.983,456,1.452,460,2.456,461,2.456,462,2.456,463,2.456,464,2.456,465,2.825,466,2.825,468,2.825,470,2.825,471,2.456,514,4.043,534,1.452,551,1.88,552,1.635,553,1.635,563,1.88,622,1.452,720,1.88,770,1.88,771,1.88,772,3.941,773,1.88,774,5.43,775,4.064,776,4.519,777,2.252,778,2.252,779,2.456,780,2.252,781,2.252,782,2.252,783,3.384,784,2.252,785,2.252,786,3.384,787,2.252,788,2.252,789,3.384,790,2.252,791,2.252,792,2.252,793,3.384,794,3.384]],["title/components/NewTravelTagsComponent.html",[167,0.39,207,0.838]],["body/components/NewTravelTagsComponent.html",[3,0.233,4,0.198,5,0.198,8,0.307,9,0.888,12,0.888,13,1.704,23,0.708,30,0.732,39,0.032,40,0.937,41,0.435,43,1.124,48,0.743,52,0.674,55,0.43,85,0.682,86,0.952,91,0.233,92,0.198,103,0.233,104,0.071,164,0.014,165,0.02,166,0.014,167,0.57,168,0.743,169,1.35,170,1.034,171,1.034,172,1.034,173,1.034,175,0.952,176,2.25,177,1.907,179,1.466,181,1.466,184,2.035,188,0.807,189,1.466,190,1.466,191,1.034,192,1.854,193,1.034,194,1.034,195,0.743,196,1.466,197,0.743,198,1.034,199,0.743,200,1.034,201,0.743,202,1.034,203,0.743,204,1.034,205,0.743,206,1.383,207,1.331,208,1.034,209,0.743,210,0.877,211,1.034,212,0.743,213,1.223,214,1.034,215,1.034,294,1.243,318,1.568,427,3.983,441,1.853,448,3.632,452,2.196,471,3.338,502,2.026,549,1.467,550,3.839,552,2.026,554,2.33,556,2.026,568,3.304,579,3.839,581,3.304,587,4.177,592,2.33,595,2.33,596,2.33,597,2.33,600,2.9,764,2.33,766,2.33,772,3.983,779,4.257,795,2.026,796,3.839,797,3.304,798,4.599,799,3.958,800,3.958,801,2.791,802,2.791,803,2.791,804,2.791,805,2.791,806,2.791,807,2.791,808,2.791,809,2.791,810,2.791,811,2.791,812,2.791,813,4.599,814,2.791,815,2.791,816,2.791]],["title/components/PageNotFoundComponent.html",[167,0.39,209,0.838]],["body/components/PageNotFoundComponent.html",[3,0.299,4,0.254,5,0.254,8,0.393,12,1.052,23,0.806,30,0.65,39,0.032,40,0.879,52,0.61,55,0.552,91,0.299,92,0.254,103,0.299,104,0.091,164,0.018,165,0.023,166,0.018,167,0.648,168,0.953,169,1.6,170,1.327,171,1.327,172,1.327,173,1.327,175,1.222,176,2.344,177,1.987,179,1.739,181,1.739,184,1.474,188,1.036,189,1.739,190,1.739,191,1.327,192,2.057,193,1.327,194,1.327,195,0.953,196,1.739,197,0.953,198,1.327,199,0.953,200,1.327,201,0.953,202,1.327,203,0.953,204,1.327,205,0.953,206,1.052,207,0.953,208,1.327,209,1.477,210,1.96,211,1.327,212,0.953,213,0.953,214,1.327,215,1.327,247,3.799,294,1.474,318,1.222,441,2.108,452,2.437,817,4.369,818,2.99,819,4.693,820,5.233,821,4.693,822,3.583,823,3.583,824,4.693,825,4.693]],["title/classes/ReturnValueRegister.html",[104,0.08,109,1.655]],["body/classes/ReturnValueRegister.html",[0,0.933,1,0.706,3,0.221,4,0.188,5,0.188,6,1.537,8,0.291,9,0.856,10,1.096,11,1.709,13,2.107,17,1.709,21,1.709,23,0.408,25,3.151,26,1.301,27,1.414,28,1.068,29,0.933,30,0.368,32,2.142,33,1.709,34,1.709,35,1.709,36,2.46,37,0.767,39,0.033,41,0.291,44,2.881,45,1.709,46,1.709,47,1.709,48,0.706,49,1.709,51,1.394,52,0.451,53,2.179,54,1.709,55,0.753,57,1.709,60,1.537,61,1.709,62,1.537,63,1.709,64,2.212,66,1.709,67,1.709,68,1.709,69,1.709,70,2.881,71,1.709,72,2.591,73,1.829,74,1.537,75,1.709,76,1.709,77,1.709,78,1.378,80,1.709,83,1.709,85,1.438,87,1.709,88,1.709,89,1.537,90,1.709,91,0.474,92,0.188,93,1.829,94,1.537,95,1.709,96,1.709,97,1.394,98,1.709,99,1.537,100,0.904,101,0.904,102,1.068,103,0.408,104,0.125,105,1.537,106,1.709,107,1.537,108,1.537,109,2.006,110,3.151,111,0.833,112,1.537,113,1.709,114,1.068,115,1.414,116,2.212,117,2.212,118,2.881,119,2.46,120,1.537,121,0.767,122,1.889,123,1.709,124,2.46,125,3.666,126,1.709,127,1.709,128,1.709,129,1.709,130,1.709,131,2.881,132,1.709,133,2.46,134,2.46,135,1.709,136,1.709,137,1.709,138,1.709,139,2.46,140,1.709,141,1.709,142,1.709,143,2.46,144,2.46,145,2.591,146,2.212,147,1.537,148,1.537,149,1.709,150,1.709,151,2.212,152,2.46,153,1.709,154,1.709,155,1.709,156,1.709,157,1.709,158,1.709,159,1.709,160,1.709,161,1.709,162,1.709,163,0.983,164,0.013,165,0.019,166,0.013,431,1.537,826,2.652]],["title/classes/Token.html",[104,0.08,111,0.989]],["body/classes/Token.html",[0,0.915,1,0.687,3,0.216,4,0.183,5,0.183,6,1.498,8,0.284,9,0.84,10,1.083,11,1.666,13,2.092,17,1.666,21,1.666,23,0.398,25,3.113,26,1.277,27,1.387,28,1.041,29,0.915,30,0.611,32,2.111,33,1.666,34,1.666,35,1.666,36,2.414,37,0.747,39,0.033,41,0.484,42,1.083,44,2.839,45,1.666,46,1.666,47,1.666,48,0.687,49,1.666,51,1.358,52,0.44,53,2.166,54,1.666,55,0.744,57,1.666,60,1.498,61,1.666,62,1.509,63,1.666,64,2.171,66,1.666,67,1.666,68,1.666,69,1.666,70,2.839,71,1.666,72,2.553,73,1.795,74,1.498,75,1.666,76,1.666,77,1.666,78,1.364,80,1.666,83,1.666,85,1.463,87,1.666,88,1.666,89,1.498,90,1.666,91,0.471,92,0.183,93,1.795,94,1.498,95,1.666,96,1.666,97,1.358,98,1.666,99,1.498,100,0.881,101,0.881,102,1.041,103,0.403,104,0.123,105,1.498,106,1.666,107,1.498,108,1.498,109,1.358,110,2.414,111,1.176,112,2.553,113,2.839,114,1.774,115,1.387,116,2.171,117,2.171,118,2.839,119,2.414,120,1.509,121,0.747,122,1.88,123,1.666,124,2.414,125,3.641,126,1.666,127,1.666,128,1.666,129,1.666,130,1.666,131,2.839,132,1.666,133,2.414,134,2.414,135,1.666,136,1.666,137,1.666,138,1.666,139,2.414,140,1.666,141,1.666,142,1.666,143,2.414,144,2.414,145,2.553,146,2.171,147,1.498,148,1.498,149,1.666,150,1.666,151,2.171,152,2.414,153,1.666,154,1.666,155,1.666,156,1.666,157,1.666,158,1.666,159,1.666,160,1.666,161,1.666,162,1.666,163,0.957,164,0.013,165,0.018,166,0.013,431,1.498,827,2.584,828,2.584,829,2.584]],["title/interfaces/TravelBlogModel.html",[369,1.825,384,1.655]],["body/interfaces/TravelBlogModel.html",[0,1.059,3,0.265,4,0.226,5,0.226,8,0.349,9,0.972,10,0.972,23,0.49,37,1.253,39,0.033,41,0.476,43,1.281,53,1.826,55,0.917,62,1.745,78,1.408,85,1.455,91,0.411,92,0.226,100,1.084,103,0.411,104,0.11,111,1.739,114,1.281,115,1.178,164,0.016,165,0.021,166,0.016,178,1.843,183,1.524,206,0.972,213,0.846,311,0.998,331,2.049,334,3.177,343,2.049,344,2.308,345,2.308,346,2.049,349,2.308,354,2.308,356,2.308,358,2.308,360,2.308,362,2.308,364,2.308,366,4.149,369,2.857,370,4.149,371,4.149,375,2.308,376,2.308,377,1.843,378,2.512,379,2.049,380,2.049,381,2.308,382,3.145,383,2.077,384,1.671,385,2.793,386,2.793,387,3.145,388,2.793,389,2.308,390,2.308,391,2.049,392,2.308,393,2.308,394,2.308,395,2.049,396,2.308,397,3.145,398,3.145,399,3.145,400,2.308,401,3.842,402,3.842,403,2.308,404,3.145,405,3.145,406,2.308,407,2.308,408,2.308,409,1.843,830,3.179]],["title/components/TravelTagsComponent.html",[167,0.39,212,0.838]],["body/components/TravelTagsComponent.html",[3,0.283,4,0.24,5,0.24,8,0.372,12,1.014,23,0.784,30,0.706,39,0.032,40,0.847,41,0.372,43,1.365,52,0.577,55,0.784,85,1.106,91,0.283,92,0.24,103,0.283,104,0.086,164,0.017,165,0.022,166,0.017,167,0.631,168,0.901,169,1.542,170,1.255,171,1.255,172,1.255,173,1.255,175,1.155,176,2.324,177,1.97,179,1.675,181,1.675,184,1.982,188,0.98,189,1.675,190,1.675,191,1.255,192,2.012,193,1.255,194,1.255,195,0.901,196,1.675,197,0.901,198,1.255,199,0.901,200,1.255,201,0.901,202,1.255,203,0.901,204,1.255,205,0.901,206,1.014,207,0.901,208,1.255,209,0.901,210,1.064,211,1.255,212,1.445,213,1.506,214,1.255,215,1.255,294,1.42,318,1.155,323,3.775,425,3.943,441,2.051,452,2.384,455,2.915,503,2.915,548,3.775,779,3.283,795,2.459,796,4.25,797,3.775,831,4.535,832,5.091,833,4.523,834,4.523,835,3.388]],["title/classes/User.html",[78,0.838,104,0.08]],["body/classes/User.html",[0,0.901,1,0.672,3,0.211,4,0.179,5,0.179,6,1.464,8,0.277,9,0.826,10,1.072,11,1.628,13,2.079,17,1.628,21,1.628,23,0.389,25,3.08,26,1.256,27,1.365,28,1.018,29,0.901,30,0.704,32,2.084,33,1.628,34,1.628,35,1.628,36,2.374,37,0.73,39,0.033,41,0.558,42,1.189,44,2.803,45,1.628,46,1.628,47,1.628,48,0.672,49,1.628,51,2.285,52,0.43,53,2.155,54,1.628,55,0.736,57,1.628,60,1.464,61,1.628,62,1.484,63,1.628,64,2.135,66,1.628,67,1.628,68,1.628,69,1.628,70,2.803,71,1.628,72,2.52,73,1.766,74,1.464,75,1.628,76,1.628,77,1.628,78,1.411,80,1.628,83,1.628,85,1.483,87,1.628,88,1.628,89,1.464,90,1.628,91,0.468,92,0.179,93,1.766,94,1.464,95,1.628,96,1.628,97,1.328,98,1.628,99,1.464,100,0.861,101,0.861,102,1.018,103,0.399,104,0.122,105,2.52,106,2.803,107,2.52,108,2.52,109,1.328,110,2.374,111,0.793,112,1.464,113,1.628,114,1.018,115,1.365,116,2.135,117,2.135,118,2.803,119,2.374,120,1.484,121,0.73,122,1.872,123,1.628,124,2.374,125,3.618,126,1.628,127,1.628,128,1.628,129,1.628,130,1.628,131,2.803,132,1.628,133,2.374,134,2.374,135,1.628,136,1.628,137,1.628,138,1.628,139,2.374,140,1.628,141,1.628,142,1.628,143,2.374,144,2.374,145,2.52,146,2.135,147,1.464,148,1.464,149,1.628,150,1.628,151,2.135,152,2.374,153,1.628,154,1.628,155,1.628,156,1.628,157,1.628,158,1.628,159,1.628,160,1.628,161,1.628,162,1.628,163,0.936,164,0.012,165,0.018,166,0.012,431,1.464,836,2.526,837,2.526,838,2.526,839,2.526,840,2.526]],["title/coverage.html",[841,3.593]],["body/coverage.html",[0,1.262,1,0.927,5,0.247,6,3.185,29,0.852,39,0.032,41,0.383,55,0.537,78,0.927,104,0.14,109,1.832,111,1.095,164,0.017,165,0.023,166,0.017,167,0.769,168,0.927,174,2.91,184,1.448,195,0.927,197,0.927,199,0.927,201,0.927,203,0.927,205,0.927,206,0.782,207,0.927,209,0.927,212,0.927,231,2.021,232,2.714,247,2.53,276,2.247,277,2.247,279,2.91,280,2.91,305,2.91,311,1.095,343,3.328,369,2.021,384,1.832,412,2.021,423,2.53,425,2.53,427,2.53,428,2.53,440,2.91,553,3.748,561,2.91,562,2.91,600,3.673,602,2.91,603,2.91,628,2.021,630,2.91,653,2.91,674,2.91,687,2.91,722,2.91,772,3.346,773,2.91,795,3.346,817,2.91,818,2.91,831,2.91,841,2.91,842,3.486,843,3.486,844,3.486,845,4.609,846,3.486,847,3.486,848,3.486,849,3.486,850,3.486,851,3.486,852,3.486,853,3.486,854,3.486,855,3.486,856,3.486,857,3.486,858,5.164,859,3.486,860,3.486,861,3.486,862,3.486,863,3.486,864,4.609,865,3.486,866,3.486,867,3.486,868,3.486,869,3.486,870,3.486,871,2.91,872,4.609,873,3.847,874,4.609,875,2.91,876,3.486,877,3.486]],["title/dependencies.html",[219,2.196,878,2.626]],["body/dependencies.html",[26,1.502,39,0.033,92,0.312,100,1.502,101,1.823,164,0.022,165,0.026,166,0.022,219,2.552,221,2.809,239,4.462,240,3.88,243,3.196,253,2.314,415,3.675,879,4.403,880,4.403,881,4.403,882,4.403,883,6.309,884,4.403,885,4.403,886,4.403,887,4.403,888,4.403,889,4.403,890,4.403,891,4.403,892,4.403,893,4.403,894,4.403,895,4.403,896,4.403,897,4.403,898,4.403,899,4.403]],["title/index.html",[8,0.288,60,1.522,900,2.626]],["body/index.html",[4,0.289,39,0.025,40,0.763,74,3.223,146,2.362,164,0.02,165,0.025,166,0.02,167,0.689,177,1.28,206,0.914,235,2.627,299,3.402,320,2.958,518,3.402,901,4.075,902,5.096,903,4.075,904,5.561,905,5.561,906,4.075,907,4.075,908,4.075,909,5.096,910,5.998,911,6.207,912,4.075,913,4.075,914,4.075,915,4.075,916,4.075,917,4.075,918,4.075,919,4.075,920,5.561,921,4.075,922,5.998,923,4.075,924,4.075,925,4.075,926,4.075,927,4.075,928,4.075,929,3.402,930,5.096,931,5.096,932,5.826,933,4.075,934,5.096,935,5.096,936,4.075,937,5.826,938,4.075,939,4.075,940,4.075,941,5.561,942,4.075,943,4.075]],["title/modules.html",[218,2.262]],["body/modules.html",[39,0.028,164,0.024,165,0.028,166,0.024,217,3.179,218,2.592,229,2.858,230,2.858,240,4.15,944,5.717,945,5.717,946,6.038,947,4.931,948,4.931]],["title/overview.html",[949,3.593]],["body/overview.html",[1,1.403,2,2.346,29,1.289,39,0.032,164,0.018,165,0.023,166,0.018,168,1.61,169,1.241,188,1.053,195,1.403,197,1.403,199,1.403,201,1.403,203,1.403,205,1.403,207,1.403,209,1.403,212,1.403,216,1.913,217,4.224,218,1.913,219,2.11,220,2.642,221,1.913,222,2.642,223,2.346,224,3.039,225,3.039,226,3.039,227,3.039,228,3.039,229,3.057,230,3.75,231,3.057,232,2.772,233,3.442,234,2.642,235,2.346,273,2.346,276,2.346,384,1.913,409,3.057,410,3.039,411,3.039,412,3.057,431,2.11,509,3.958,628,2.11,673,3.039,721,3.039,949,3.039,950,3.64]],["title/routes.html",[273,2.775]],["body/routes.html",[39,0.029,164,0.025,165,0.029,166,0.025,273,3.305]],["title/miscellaneous/variables.html",[951,2.192,952,3.163]],["body/miscellaneous/variables.html",[8,0.519,39,0.032,41,0.612,48,1.483,86,1.902,164,0.023,165,0.028,166,0.023,270,2.739,304,2.484,871,3.944,873,5.115,875,3.944,929,4.654,951,3.944,952,3.944,953,4.725,954,4.725,955,5.576]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":600,"title":{},"body":{"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{},"components/NewTravelTagsComponent.html":{},"coverage.html":{}}}],["0.2",{"_index":560,"title":{},"body":{"components/EntryComponent.html":{}}}],["0.8.26",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":409,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interfaces/TravelBlogModel.html":{},"overview.html":{}}}],["1.9.0",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{}}}],["10.0.4",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":553,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{},"coverage.html":{}}}],["12/14",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":596,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["1px",{"_index":550,"title":{},"body":{"components/EntryComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["2",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2.2.0",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["283a5e",{"_index":759,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2px",{"_index":598,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["3",{"_index":509,"title":{},"body":{"components/EntryComponent.html":{},"overview.html":{}}}],["3/11",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":950,"title":{},"body":{"overview.html":{}}}],["4.3.1",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":618,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":619,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["404",{"_index":824,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["42",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["5.1.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":558,"title":{},"body":{"components/EntryComponent.html":{}}}],["5px",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["6.3.3",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":907,"title":{},"body":{"index.html":{}}}],["7/8",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":809,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["77",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["8.1.2",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":559,"title":{},"body":{"components/EntryComponent.html":{}}}],["access",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["accessors",{"_index":570,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["accesstoken",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["activatedroutesnapshot",{"_index":286,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["actual_component",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["add",{"_index":470,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["addnewentry",{"_index":347,"title":{},"body":{"injectables/BlogService.html":{}}}],["addnewentry(entry",{"_index":354,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["addtraveltag",{"_index":448,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["addtraveltag(traveltag",{"_index":468,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["again",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["angular",{"_index":904,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":415,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["angular/compiler",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["another",{"_index":501,"title":{},"body":{"components/EntryComponent.html":{}}}],["anything",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["api.service",{"_index":376,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"index.html":{}}}],["app.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":168,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":383,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["appmodule",{"_index":217,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":229,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":834,"title":{},"body":{"components/TravelTagsComponent.html":{}}}],["artifacts",{"_index":923,"title":{},"body":{"index.html":{}}}],["assets/${imagenumber}.jpeg",{"_index":511,"title":{},"body":{"components/EntryComponent.html":{}}}],["attributes",{"_index":642,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["auth",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["auth.service",{"_index":616,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["authenticated",{"_index":298,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HomeComponent.html":{}}}],["authentication",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["authguardservice",{"_index":277,"title":{"guards/AuthGuardService.html":{}},"body":{"guards/AuthGuardService.html":{},"modules/DashboardModule.html":{},"coverage.html":{}}}],["author",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"pipes/FilterPipe.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["author_id",{"_index":380,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["authorization",{"_index":682,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["authservice",{"_index":29,"title":{"injectables/AuthService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":620,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["automatically",{"_index":915,"title":{},"body":{"index.html":{}}}],["available",{"_index":948,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["background",{"_index":556,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["badge",{"_index":548,"title":{},"body":{"components/EntryComponent.html":{},"components/TravelTagsComponent.html":{}}}],["baseurl",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["bearer",{"_index":683,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["behaviorentries",{"_index":344,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["behaviorsubject",{"_index":366,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["behaviorsubject(null",{"_index":394,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["behavioruser",{"_index":345,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["better",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["black",{"_index":816,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["block",{"_index":767,"title":{},"body":{"components/NavigationComponent.html":{}}}],["blog",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["blog.service",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["blogservice",{"_index":311,"title":{"injectables/BlogService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"interfaces/TravelBlogModel.html":{},"coverage.html":{}}}],["body",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["boolean",{"_index":292,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{}}}],["bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/NavigationComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":813,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["bottom",{"_index":597,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["browse",{"_index":946,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":496,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["bsmodalservice",{"_index":458,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["build",{"_index":922,"title":{},"body":{"index.html":{}}}],["calcs",{"_index":482,"title":{},"body":{"components/EntryComponent.html":{}}}],["calling",{"_index":463,"title":{},"body":{"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{}}}],["canactivate",{"_index":281,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["canactivate(next",{"_index":285,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["card",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{},"components/NewEntryComponent.html":{}}}],["catcherror",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["catcherror(this.handleerror",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["change",{"_index":917,"title":{},"body":{"index.html":{}}}],["changed",{"_index":575,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["changepassword",{"_index":728,"title":{},"body":{"components/NavigationComponent.html":{}}}],["changeuserpassword",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["changeuserpassword(password",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["check",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["class",{"_index":104,"title":{"classes/Entry.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":431,"title":{},"body":{"classes/Entry.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":905,"title":{},"body":{"index.html":{}}}],["client",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["closemodal",{"_index":449,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["closemodal(template",{"_index":472,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["closes",{"_index":475,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["clues",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["cluster_appmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":410,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":411,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["code",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"index.html":{}}}],["color",{"_index":502,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["coloring",{"_index":500,"title":{},"body":{"components/EntryComponent.html":{}}}],["combined",{"_index":641,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["commonmodule",{"_index":414,"title":{},"body":{"modules/DashboardModule.html":{}}}],["component",{"_index":167,"title":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["components",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"overview.html":{}}}],["console.error(`backend",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["console.log('authenticated",{"_index":296,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["console.log('client",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["console.log('edit",{"_index":746,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log('init",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log('not",{"_index":297,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["console.log('tokenrefresh",{"_index":742,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(elem",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["console.log(entry",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["console.log(password",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["console.log(searchterm",{"_index":646,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["console.log(this.auth.isauthenticated",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.editingentry.tags",{"_index":542,"title":{},"body":{"components/EntryComponent.html":{}}}],["console.log(this.entry.title",{"_index":517,"title":{},"body":{"components/EntryComponent.html":{}}}],["console.log(this.newentry.tags",{"_index":792,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["console.log(this.user",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.user.password",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(user",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["const",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["constructor(api",{"_index":456,"title":{},"body":{"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewEntryComponent.html":{}}}],["constructor(auth",{"_index":606,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{},"components/NavigationComponent.html":{}}}],["constructor(authservice",{"_index":282,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(http",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["constructor(router",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["contain",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["control",{"_index":807,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["core",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":841,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crashes",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["create",{"_index":774,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["createentry",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/NewEntryComponent.html":{}}}],["createentry(entry",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["creator",{"_index":640,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["credentials",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":388,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["currentuser",{"_index":371,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["cursor",{"_index":770,"title":{},"body":{"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["dashboard",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["dashboard.routes",{"_index":420,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/dashboard.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardmodule",{"_index":230,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutes",{"_index":419,"title":{},"body":{"modules/DashboardModule.html":{}}}],["data",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["database",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["datastore",{"_index":346,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["date",{"_index":378,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["declarations",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["decode",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["defining",{"_index":460,"title":{},"body":{"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{}}}],["delete",{"_index":450,"title":{},"body":{"components/EntryComponent.html":{}}}],["deleteentry",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteentry(entry",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["dependencies",{"_index":219,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":497,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["description",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{}}}],["dev",{"_index":913,"title":{},"body":{"index.html":{}}}],["development",{"_index":908,"title":{},"body":{"index.html":{}}}],["directive",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["directives",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":921,"title":{},"body":{"index.html":{}}}],["directory",{"_index":926,"title":{},"body":{"index.html":{}}}],["disable",{"_index":480,"title":{},"body":{"components/EntryComponent.html":{}}}],["disabled",{"_index":495,"title":{},"body":{"components/EntryComponent.html":{}}}],["display",{"_index":766,"title":{},"body":{"components/NavigationComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["display:inline",{"_index":768,"title":{},"body":{"components/NavigationComponent.html":{}}}],["displayed",{"_index":386,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["dist",{"_index":925,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["dynamic",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["e2e",{"_index":938,"title":{},"body":{"index.html":{}}}],["edit",{"_index":493,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["editing",{"_index":451,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/NewEntryComponent.html":{}}}],["editingentry",{"_index":444,"title":{},"body":{"components/EntryComponent.html":{}}}],["edituser",{"_index":729,"title":{},"body":{"components/NavigationComponent.html":{}}}],["elem.id",{"_index":405,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["elem.title",{"_index":650,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["elem.title.tolowercase().includes(searchterm",{"_index":651,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["element",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["email",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["emit",{"_index":581,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["emitter",{"_index":800,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["enable",{"_index":479,"title":{},"body":{"components/EntryComponent.html":{}}}],["enabled",{"_index":577,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["end",{"_index":937,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["entires",{"_index":645,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["entrie",{"_index":639,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["entries",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["entry",{"_index":55,"title":{"classes/Entry.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["entry'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["entry).pipe",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["entry.component",{"_index":424,"title":{},"body":{"modules/DashboardModule.html":{}}}],["entry.component.css",{"_index":442,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["entry.component.html",{"_index":443,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["entry.component.ts",{"_index":773,"title":{},"body":{"components/NewEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:19",{"_index":784,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.component.ts:24",{"_index":785,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":777,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":781,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.component.ts:45",{"_index":780,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.component.ts:61",{"_index":782,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.component.ts:76",{"_index":778,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["entry.id",{"_index":406,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["entry.text",{"_index":543,"title":{},"body":{"components/EntryComponent.html":{}}}],["entry/entry.component",{"_index":421,"title":{},"body":{"modules/DashboardModule.html":{}}}],["entry/new",{"_index":423,"title":{},"body":{"modules/DashboardModule.html":{},"components/NewEntryComponent.html":{},"coverage.html":{}}}],["entrycomponent",{"_index":195,"title":{"components/EntryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrydate",{"_index":567,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["entryheadercomponent",{"_index":197,"title":{"components/EntryHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryid",{"_index":358,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["environment",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["err.error",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["err.error.body",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["err.error.message",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["err.status",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["err.statustext",{"_index":626,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["errorcounter",{"_index":604,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorevent",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["errorinterceptor",{"_index":231,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errorobservable",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["errors",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["eventemitter",{"_index":579,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["example",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{}}}],["execute",{"_index":934,"title":{},"body":{"index.html":{}}}],["existing",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"components/TravelTagsComponent.html":{}}}],["expiration",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["facing",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["false",{"_index":304,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/EntryComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"miscellaneous/variables.html":{}}}],["fas",{"_index":761,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ffffff",{"_index":760,"title":{},"body":{"components/NavigationComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["files",{"_index":918,"title":{},"body":{"index.html":{}}}],["filter",{"_index":634,"title":{},"body":{"pipes/FilterPipe.html":{},"components/HomeComponent.html":{}}}],["filter/filter.pipe",{"_index":422,"title":{},"body":{"modules/DashboardModule.html":{}}}],["filtering",{"_index":631,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["filterpipe",{"_index":412,"title":{"pipes/FilterPipe.html":{}},"body":{"modules/DashboardModule.html":{},"pipes/FilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["finalize",{"_index":678,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["flag",{"_index":928,"title":{},"body":{"index.html":{}}}],["font",{"_index":592,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["form",{"_index":806,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["formsmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["found",{"_index":819,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["found.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.css",{"_index":820,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":821,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":818,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":823,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":822,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":520,"title":{},"body":{"components/EntryComponent.html":{}}}],["further",{"_index":940,"title":{},"body":{"index.html":{}}}],["generate",{"_index":920,"title":{},"body":{"index.html":{}}}],["generated",{"_index":903,"title":{},"body":{"index.html":{}}}],["getallentries",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["getting",{"_index":60,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["gettoken",{"_index":740,"title":{},"body":{"components/NavigationComponent.html":{}}}],["go",{"_index":942,"title":{},"body":{"index.html":{}}}],["graph",{"_index":947,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":276,"title":{"guards/AuthGuardService.html":{}},"body":{"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":418,"title":{},"body":{"modules/DashboardModule.html":{}}}],["guard.service.ts",{"_index":280,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":289,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:7",{"_index":284,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":278,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards/auth",{"_index":417,"title":{},"body":{"modules/DashboardModule.html":{}}}],["handle",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["handleerror",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["handleerror(err",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["handling",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["hannah",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"pipes/FilterPipe.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["header",{"_index":563,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewEntryComponent.html":{}}}],["header'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["header.component",{"_index":429,"title":{},"body":{"modules/DashboardModule.html":{}}}],["header.component.css",{"_index":564,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.html",{"_index":565,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts",{"_index":562,"title":{},"body":{"components/EntryHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:16",{"_index":576,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":572,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":573,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":583,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":578,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:41",{"_index":580,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:47",{"_index":585,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":571,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header.component.ts:54",{"_index":582,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["header/entry",{"_index":428,"title":{},"body":{"modules/DashboardModule.html":{},"components/EntryHeaderComponent.html":{},"coverage.html":{}}}],["height",{"_index":554,"title":{},"body":{"components/EntryComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["help",{"_index":941,"title":{},"body":{"index.html":{}}}],["here",{"_index":488,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["holding",{"_index":464,"title":{},"body":{"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{}}}],["home",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["home.component.css",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":416,"title":{},"body":{"modules/DashboardModule.html":{}}}],["homecomponent",{"_index":199,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hr",{"_index":599,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["html",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["http",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["http://localhost:4200",{"_index":914,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["http_interceptors",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["httpclientmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/Interceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["httpevent",{"_index":614,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["httphandler",{"_index":610,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["httpinterceptor",{"_index":615,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["httprequest",{"_index":609,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["httpresponse",{"_index":677,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["id",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["identifier",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":381,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["imagenumber",{"_index":507,"title":{},"body":{"components/EntryComponent.html":{}}}],["images",{"_index":483,"title":{},"body":{"components/EntryComponent.html":{}}}],["implements",{"_index":294,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["import",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["informations",{"_index":466,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"overview.html":{}}}],["inline",{"_index":808,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["input",{"_index":503,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/NavigationComponent.html":{},"components/TravelTagsComponent.html":{}}}],["inputs",{"_index":455,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/NavigationComponent.html":{},"components/TravelTagsComponent.html":{}}}],["inside",{"_index":498,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["instanceof",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["intercept",{"_index":605,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["intercept(request",{"_index":608,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["interceptor",{"_index":232,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/Interceptor.html":{},"coverage.html":{},"overview.html":{}}}],["interceptor.ts",{"_index":603,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:13",{"_index":607,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:17",{"_index":611,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors",{"_index":601,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["interface",{"_index":384,"title":{"interfaces/TravelBlogModel.html":{}},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":830,"title":{},"body":{"interfaces/TravelBlogModel.html":{}}}],["isauthenticated",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["isediting",{"_index":445,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/NewEntryComponent.html":{}}}],["isloggedin",{"_index":730,"title":{},"body":{"components/NavigationComponent.html":{}}}],["islogin",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["istokenexpired",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["italic",{"_index":594,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["items",{"_index":643,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["items.foreach(elem",{"_index":649,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["js",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["jwt",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":936,"title":{},"body":{"index.html":{}}}],["last",{"_index":574,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["legend",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"overview.html":{}}}],["li",{"_index":765,"title":{},"body":{"components/NavigationComponent.html":{}}}],["line",{"_index":812,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["link",{"_index":769,"title":{},"body":{"components/NavigationComponent.html":{}}}],["list",{"_index":385,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/NavigationComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["listofallentries",{"_index":370,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["load",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["loading",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["local",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.clear",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{}}}],["localstorage.getitem('user",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage.setitem('token",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":300,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["login(token",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":201,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginuser",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["loginuser(user",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["logout",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{}}}],["looking",{"_index":825,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["mail",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{}}}],["make",{"_index":462,"title":{},"body":{"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{}}}],["map",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["margin",{"_index":549,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["match",{"_index":755,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matching",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":508,"title":{},"body":{"components/EntryComponent.html":{}}}],["message",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["metadata",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["methods",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["miscellaneous",{"_index":951,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismatch",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{}}}],["mobil",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["modal",{"_index":476,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["modalmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":446,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["modals",{"_index":487,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["modalservice",{"_index":457,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["model",{"_index":382,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["module",{"_index":216,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["modules",{"_index":218,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":518,"title":{},"body":{"components/EntryComponent.html":{},"index.html":{}}}],["movie",{"_index":632,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["multi",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"index.html":{}}}],["nav",{"_index":758,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":299,"title":{},"body":{"guards/AuthGuardService.html":{},"index.html":{}}}],["navigation",{"_index":723,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["navigation.component.css",{"_index":724,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":725,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["navigationcomponent",{"_index":203,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["needs",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["new",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newentry",{"_index":775,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["newentry.tags",{"_index":794,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["newentrycomponent",{"_index":205,"title":{"components/NewEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpassword",{"_index":726,"title":{},"body":{"components/NavigationComponent.html":{}}}],["newpasswordagain",{"_index":727,"title":{},"body":{"components/NavigationComponent.html":{}}}],["newpw",{"_index":750,"title":{},"body":{"components/NavigationComponent.html":{}}}],["newtraveltag",{"_index":798,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["newtraveltagscomponent",{"_index":207,"title":{"components/NewTravelTagsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":290,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["next.handle(request).pipe",{"_index":685,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":617,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":911,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{}}}],["ngoninit",{"_index":452,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["ngx",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nickname",{"_index":379,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["none",{"_index":764,"title":{},"body":{"components/NavigationComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["noopanimationsmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["now",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["null",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["number",{"_index":613,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["object",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":633,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["observable",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["oninit",{"_index":441,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["openmodal",{"_index":453,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["openmodal(template",{"_index":484,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["opens",{"_index":486,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["otherwise",{"_index":494,"title":{},"body":{"components/EntryComponent.html":{}}}],["out",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":587,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["outputs",{"_index":568,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["overview",{"_index":949,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":555,"title":{},"body":{"components/EntryComponent.html":{}}}],["package",{"_index":878,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":763,"title":{},"body":{"components/NavigationComponent.html":{}}}],["page",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["pagenotfoundcomponent",{"_index":209,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["params",{"_index":786,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["parser",{"_index":519,"title":{},"body":{"components/EntryComponent.html":{}}}],["password",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["password).pipe",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["passwordagain",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["phonenumber",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["pipe",{"_index":628,"title":{"pipes/FilterPipe.html":{}},"body":{"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":629,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["pipetransform",{"_index":644,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["pointer",{"_index":771,"title":{},"body":{"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["post",{"_index":793,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["prevent",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["private",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["prod",{"_index":927,"title":{},"body":{"index.html":{}}}],["production",{"_index":929,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":902,"title":{},"body":{"index.html":{}}}],["promise",{"_index":291,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{}}}],["protractor",{"_index":939,"title":{},"body":{"index.html":{}}}],["provide",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["pssswords",{"_index":754,"title":{},"body":{"components/NavigationComponent.html":{}}}],["public",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["pw",{"_index":749,"title":{},"body":{"components/NavigationComponent.html":{}}}],["radius",{"_index":814,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["reachbale",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["readme",{"_index":943,"title":{},"body":{"index.html":{}}}],["really",{"_index":544,"title":{},"body":{"components/EntryComponent.html":{}}}],["receiving",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["redirect",{"_index":303,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["redundant",{"_index":506,"title":{},"body":{"components/EntryComponent.html":{}}}],["refreshtoken",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["register",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["registeruser",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{}}}],["registeruser(user",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["reload",{"_index":916,"title":{},"body":{"index.html":{}}}],["remove",{"_index":546,"title":{},"body":{"components/EntryComponent.html":{}}}],["removed",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeexistingentry",{"_index":348,"title":{},"body":{"injectables/BlogService.html":{}}}],["removeexistingentry(entryid",{"_index":356,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["removeuser",{"_index":349,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["reponses",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["request",{"_index":612,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{}}}],["request.clone",{"_index":680,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["requests",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["res",{"_index":648,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["res.push(elem",{"_index":652,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["reset",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["resources",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["response",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["result",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["retry(1",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["return",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["returned",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["returns",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["returnvalueregister",{"_index":109,"title":{"classes/ReturnValueRegister.html":{}},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"coverage.html":{}}}],["rgba(0",{"_index":810,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["rgba(40",{"_index":557,"title":{},"body":{"components/EntryComponent.html":{}}}],["right",{"_index":811,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["root",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["root'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["route",{"_index":293,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["router",{"_index":283,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["routermodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{}}}],["routermodule.forchild(dashboardroutes",{"_index":430,"title":{},"body":{"modules/DashboardModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":288,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["routes",{"_index":273,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["run",{"_index":910,"title":{},"body":{"index.html":{}}}],["running",{"_index":930,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/Interceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["safe",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["save",{"_index":454,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["saved",{"_index":745,"title":{},"body":{"components/NavigationComponent.html":{}}}],["savely",{"_index":302,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["scaffolding",{"_index":919,"title":{},"body":{"index.html":{}}}],["schieber",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"pipes/FilterPipe.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["searchterm",{"_index":637,"title":{},"body":{"pipes/FilterPipe.html":{},"components/HomeComponent.html":{}}}],["searchterm.tolowercase",{"_index":647,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["selector",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["serve",{"_index":912,"title":{},"body":{"index.html":{}}}],["server",{"_index":909,"title":{},"body":{"index.html":{}}}],["service",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["service/auth.service",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["service/error",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["services",{"_index":461,"title":{},"body":{"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/NewEntryComponent.html":{}}}],["set",{"_index":505,"title":{},"body":{"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{}}}],["setallentries",{"_index":350,"title":{},"body":{"injectables/BlogService.html":{}}}],["setallentries(entries",{"_index":360,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["setheaders",{"_index":681,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["setting",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["settitle(val",{"_index":584,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["setuser",{"_index":351,"title":{},"body":{"injectables/BlogService.html":{}}}],["setuser(user",{"_index":362,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["shared/api.service",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["shared/blog.service",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["showing",{"_index":465,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["size",{"_index":595,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["solid",{"_index":815,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"modules/DashboardModule.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"index.html":{}}}],["src/.../environment.prod.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":413,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/entry",{"_index":561,"title":{},"body":{"components/EntryHeaderComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/entry/entry.component.ts",{"_index":440,"title":{},"body":{"components/EntryComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/entry/entry.component.ts:109",{"_index":485,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:117",{"_index":474,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:125",{"_index":477,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:137",{"_index":469,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:20",{"_index":467,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:26",{"_index":491,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:31",{"_index":499,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:38",{"_index":492,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:44",{"_index":459,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:61",{"_index":481,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:75",{"_index":478,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/entry/entry.component.ts:85",{"_index":490,"title":{},"body":{"components/EntryComponent.html":{}}}],["src/app/dashboard/home/home.component.ts",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/home/home.component.ts:19",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/dashboard/home/home.component.ts:24",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/dashboard/home/home.component.ts:41",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/dashboard/new",{"_index":772,"title":{},"body":{"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/travel",{"_index":831,"title":{},"body":{"components/TravelTagsComponent.html":{},"coverage.html":{}}}],["src/app/filter/filter.pipe.ts",{"_index":630,"title":{},"body":{"pipes/FilterPipe.html":{},"coverage.html":{}}}],["src/app/filter/filter.pipe.ts:18",{"_index":638,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/guards/auth",{"_index":279,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:14",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:58",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navigation/navigation.component.ts",{"_index":722,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts:15",{"_index":732,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:17",{"_index":738,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:18",{"_index":739,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:23",{"_index":731,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:39",{"_index":737,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:47",{"_index":734,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:53",{"_index":736,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:57",{"_index":735,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:61",{"_index":733,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:76",{"_index":741,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/page",{"_index":817,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/service/auth.service.ts",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/service/auth.service.ts:16",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/service/auth.service.ts:24",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/service/auth.service.ts:28",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/service/auth.service.ts:33",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/service/auth.service.ts:44",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/service/auth.service.ts:9",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/service/error",{"_index":602,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/service/interceptor.ts",{"_index":674,"title":{},"body":{"interceptors/Interceptor.html":{},"coverage.html":{}}}],["src/app/service/interceptor.ts:13",{"_index":676,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["src/app/service/interceptor.ts:9",{"_index":675,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["src/app/shared/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/api.service.ts:105",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:11",{"_index":840,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/api.service.ts:112",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:12",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/api.service.ts:124",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:13",{"_index":838,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/api.service.ts:14",{"_index":836,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/api.service.ts:15",{"_index":839,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/api.service.ts:20",{"_index":826,"title":{},"body":{"classes/ReturnValueRegister.html":{}}}],["src/app/shared/api.service.ts:24",{"_index":827,"title":{},"body":{"classes/Token.html":{}}}],["src/app/shared/api.service.ts:25",{"_index":829,"title":{},"body":{"classes/Token.html":{}}}],["src/app/shared/api.service.ts:26",{"_index":828,"title":{},"body":{"classes/Token.html":{}}}],["src/app/shared/api.service.ts:44",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:56",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:62",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:69",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:79",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:87",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/api.service.ts:95",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/shared/blog.service.ts",{"_index":343,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{},"coverage.html":{}}}],["src/app/shared/blog.service.ts:10",{"_index":434,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:11",{"_index":432,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:12",{"_index":433,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:13",{"_index":437,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:14",{"_index":436,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:37",{"_index":373,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:38",{"_index":374,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:39",{"_index":367,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:40",{"_index":368,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:41",{"_index":372,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:44",{"_index":353,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:58",{"_index":363,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:63",{"_index":359,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:68",{"_index":361,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:7",{"_index":435,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:73",{"_index":355,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:78",{"_index":365,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:8",{"_index":439,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/shared/blog.service.ts:86",{"_index":357,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/shared/blog.service.ts:9",{"_index":438,"title":{},"body":{"classes/Entry.html":{}}}],["src/environments/environment.prod.ts",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":900,"title":{"index.html":{}},"body":{}}],["state",{"_index":287,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["statements",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["stop",{"_index":783,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["storage",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":924,"title":{},"body":{"index.html":{}}}],["string",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{}}}],["style",{"_index":593,"title":{},"body":{"components/EntryHeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["styles",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["styleurls",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["subject",{"_index":375,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["success",{"_index":534,"title":{},"body":{"components/EntryComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{}}}],["suggestion",{"_index":489,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["support",{"_index":944,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":945,"title":{},"body":{"modules.html":{}}}],["table",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":779,"title":{},"body":{"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/TravelTagsComponent.html":{}}}],["tags",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{}}}],["tags'},{'name",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["tags.component",{"_index":426,"title":{},"body":{"modules/DashboardModule.html":{}}}],["tags.component.css",{"_index":796,"title":{},"body":{"components/NewTravelTagsComponent.html":{},"components/TravelTagsComponent.html":{}}}],["tags.component.html",{"_index":797,"title":{},"body":{"components/NewTravelTagsComponent.html":{},"components/TravelTagsComponent.html":{}}}],["tags.component.ts",{"_index":795,"title":{},"body":{"components/NewTravelTagsComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{}}}],["tags.component.ts:16",{"_index":833,"title":{},"body":{"components/TravelTagsComponent.html":{}}}],["tags.component.ts:17",{"_index":803,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["tags.component.ts:20",{"_index":835,"title":{},"body":{"components/TravelTagsComponent.html":{}}}],["tags.component.ts:22",{"_index":799,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["tags.component.ts:26",{"_index":802,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["tags.component.ts:32",{"_index":801,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["tags/new",{"_index":427,"title":{},"body":{"modules/DashboardModule.html":{},"components/NewTravelTagsComponent.html":{},"coverage.html":{}}}],["tags/travel",{"_index":425,"title":{},"body":{"modules/DashboardModule.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{}}}],["template",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["templateref",{"_index":473,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["templateurl",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["test",{"_index":933,"title":{},"body":{"index.html":{}}}],["tests",{"_index":932,"title":{},"body":{"index.html":{}}}],["text",{"_index":377,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/NewEntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["textarea",{"_index":551,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["this.api.changeuserpassword(pw).subscribe(elem",{"_index":751,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.api.createentry(this.newentry).subscribe(elem",{"_index":787,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["this.api.deleteentry(this.entry).subscribe(elem",{"_index":538,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.api.getallentries().subscribe(elem",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.api.loginuser(this.user).subscribe(elem",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.api.registeruser(this.user).subscribe(elem",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.api.tokenrefresh().subscribe(elem",{"_index":743,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.api.updateentry(updateentry).subscribe(elem",{"_index":529,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.auth.isauthenticated",{"_index":679,"title":{},"body":{"interceptors/Interceptor.html":{},"components/NavigationComponent.html":{}}}],["this.auth.login(elem",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["this.auth.logout",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":295,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.behaviorentries",{"_index":390,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.behaviorentries.asobservable",{"_index":392,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.behaviorentries.next(object.assign",{"_index":401,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.behavioruser",{"_index":393,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.behavioruser.asobservable",{"_index":396,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.behavioruser.next(object.assign",{"_index":398,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.blogservice.hide",{"_index":686,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["this.blogservice.show",{"_index":684,"title":{},"body":{"interceptors/Interceptor.html":{}}}],["this.clear",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.data.addnewentry(elem",{"_index":790,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["this.data.datastore.currentuser.id",{"_index":512,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.data.datastore.listofallentries",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data.removeexistingentry(this.entry.id",{"_index":539,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.data.removeuser",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.data.setallentries(elem",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data.setuser(user",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data.updateexistingentry(elem",{"_index":530,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.datastore",{"_index":389,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore).currentuser",{"_index":399,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore).listofallentries",{"_index":402,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore.currentuser",{"_index":397,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore.listofallentries",{"_index":400,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore.listofallentries.foreach((elem",{"_index":404,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore.listofallentries.push(entry",{"_index":403,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore.listofallentries.splice(i",{"_index":408,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.datastore.listofallentries[i",{"_index":407,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.editing",{"_index":531,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry",{"_index":515,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.author",{"_index":526,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.author_id",{"_index":527,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.date",{"_index":525,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.id",{"_index":522,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.tags",{"_index":528,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.tags.push(traveltag",{"_index":541,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.text",{"_index":524,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.editingentry.title",{"_index":533,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.entries",{"_index":391,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/HomeComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.entry",{"_index":516,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.entry.image",{"_index":510,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.entry.title",{"_index":523,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.errorcounter",{"_index":621,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.http.delete(`${this.baseurl}deleteentry/${entry.id}`).pipe",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.get(`${this.baseurl}getallentries`).pipe",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.get(`${this.baseurl}tokenrefresh`).pipe",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.post(`${this.baseurl}createentry",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.post(`${this.baseurl}login",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.post(`${this.baseurl}register",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.put(`${this.baseurl}changeentry",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.http.put(`${this.baseurl}changeuserpw",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["this.isediting",{"_index":514,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{}}}],["this.islogin",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.istokenexpired",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modalref",{"_index":535,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["this.modalref.hide",{"_index":537,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["this.modalservice.show(template",{"_index":536,"title":{},"body":{"components/EntryComponent.html":{},"components/NavigationComponent.html":{}}}],["this.newentry",{"_index":789,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["this.newentry.tags.push(traveltag",{"_index":791,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["this.newpassword",{"_index":747,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.newpasswordagain",{"_index":748,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.newtraveltag.emit(this.traveltag",{"_index":804,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/login",{"_index":301,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["this.titlechange.emit(this.titlevalue",{"_index":590,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["this.titlevalue",{"_index":588,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["this.toastr.error(err.error.message",{"_index":625,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.toastr.success('created",{"_index":788,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["this.toastr.success('deleted",{"_index":540,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.toastr.success('password",{"_index":752,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.toastr.success('welcome",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.success(`updated",{"_index":532,"title":{},"body":{"components/EntryComponent.html":{}}}],["this.toastr.success(elem.message",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.warning('invalid",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.warning('new",{"_index":753,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.toastr.warning('password",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.warning('you",{"_index":744,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.traveltag",{"_index":805,"title":{},"body":{"components/NewTravelTagsComponent.html":{}}}],["this.user",{"_index":395,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"components/LoginComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["this.user.email",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.password",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.passwordagain",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.phonenumber",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.username",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userid",{"_index":513,"title":{},"body":{"components/EntryComponent.html":{}}}],["throwerror",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["throwerror('could",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["throwerror(err",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["throwerror(err.error.body",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["throwerror(error",{"_index":627,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thrown",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["title",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/NewEntryComponent.html":{},"interfaces/TravelBlogModel.html":{}}}],["title(val",{"_index":589,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["titlechange",{"_index":569,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["titlevalue",{"_index":566,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["toastr",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/EntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["toggleentry",{"_index":776,"title":{},"body":{"components/NewEntryComponent.html":{}}}],["token",{"_index":111,"title":{"classes/Token.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{},"coverage.html":{}}}],["token.accesstoken",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.id",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenrefresh",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["top",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["transform",{"_index":635,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["transform(items",{"_index":636,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["travel",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{}}}],["travelblogapp",{"_index":901,"title":{},"body":{"index.html":{}}}],["travelblogmodel",{"_index":369,"title":{"interfaces/TravelBlogModel.html":{}},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{},"coverage.html":{}}}],["traveling",{"_index":757,"title":{},"body":{"components/NavigationComponent.html":{}}}],["travellist",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["travels",{"_index":387,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["traveltag",{"_index":471,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["traveltags",{"_index":832,"title":{},"body":{"components/TravelTagsComponent.html":{}}}],["traveltagscomponent",{"_index":212,"title":{"components/TravelTagsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/DashboardModule.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tree",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["true",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"components/EntryComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"interceptors/Interceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"components/TravelTagsComponent.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":762,"title":{},"body":{"components/NavigationComponent.html":{}}}],["undefined",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["unit",{"_index":931,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["updated",{"_index":591,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["updateentry",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/EntryComponent.html":{}}}],["updateentry(entry",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["updateexistingentry",{"_index":352,"title":{},"body":{"injectables/BlogService.html":{}}}],["updateexistingentry(entry",{"_index":364,"title":{},"body":{"injectables/BlogService.html":{},"classes/Entry.html":{},"interfaces/TravelBlogModel.html":{}}}],["url",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["use",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{},"index.html":{}}}],["useclass",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryComponent.html":{}}}],["user",{"_index":78,"title":{"classes/User.html":{}},"body":{"injectables/ApiService.html":{},"injectables/BlogService.html":{},"classes/Entry.html":{},"components/EntryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"interfaces/TravelBlogModel.html":{},"classes/User.html":{},"coverage.html":{}}}],["user).pipe",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["userid",{"_index":447,"title":{},"body":{"components/EntryComponent.html":{}}}],["username",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["val",{"_index":586,"title":{},"body":{"components/EntryHeaderComponent.html":{}}}],["value",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["variable",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":952,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":906,"title":{},"body":{"index.html":{}}}],["via",{"_index":935,"title":{},"body":{"index.html":{}}}],["view",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlogService.html":{},"components/EntryComponent.html":{},"components/EntryHeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TravelTagsComponent.html":{}}}],["want",{"_index":545,"title":{},"body":{"components/EntryComponent.html":{}}}],["warning",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["went",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["width",{"_index":552,"title":{},"body":{"components/EntryComponent.html":{},"components/NewEntryComponent.html":{},"components/NewTravelTagsComponent.html":{}}}],["world",{"_index":756,"title":{},"body":{"components/NavigationComponent.html":{}}}],["write",{"_index":504,"title":{},"body":{"components/EntryComponent.html":{}}}],["writen",{"_index":521,"title":{},"body":{"components/EntryComponent.html":{}}}],["wrong",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{},"classes/ReturnValueRegister.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["yes",{"_index":547,"title":{},"body":{"components/EntryComponent.html":{}}}],["zone.js",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeUserPassword\n                            \n                            \n                                    Public\n                                createEntry\n                            \n                            \n                                    Public\n                                deleteEntry\n                            \n                            \n                                    Public\n                                getAllEntries\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Public\n                                tokenrefresh\n                            \n                            \n                                    Public\n                                updateEntry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastr: ToastrService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/api.service.ts:44\n                            \n                        \n\n                \n                    \n                            constructor for service setting httpClient for requests receiving JSON-Data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                http client to safe reponses by default as JSON\n\n                                                        \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeUserPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeUserPassword(password: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry(entry: Entry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEntry(entry: Entry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllEntries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:105\n                \n            \n\n\n            \n                \n                    getting all travellist entries\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:124\n                \n            \n\n\n            \n                \n                    handle errors to prevent crashes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        thrown error by backend\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Use observable for better handling\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            tokenrefresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tokenrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEntry(entry: Entry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:44\n                            \n                        \n\n                \n                    \n                        url for all database resources\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {Entry} from './blog.service';\nimport {Observable, throwError} from 'rxjs';\nimport {ToastrService} from 'ngx-toastr';\nimport {AuthService} from '../service/auth.service';\n\nexport class User {\n  username: string;\n  password: string;\n  passwordAgain?: string;\n  email?: string;\n  phonenumber?: string;\n\n}\n\nexport class ReturnValueRegister {\n  message: string;\n}\n\nexport class Token {\n  accessToken: string;\n  refreshToken?: string;\n  id?: string;\n}\n\n\n/**\n *  @author Hannah Schieber\n * Service to access endpoints\n */\n@Injectable()\n/**\n * @author Hannah Schieber\n * Service to access endpoints\n */\nexport class ApiService {\n\n  /**\n   * url for all database resources\n   */\n  private baseUrl = 'http://localhost:5000/';\n\n  /**\n   *\n   * constructor for service setting httpClient for requests receiving JSON-Data.\n   * @param {HttpClient} http http client to safe reponses by default as JSON\n   */\n  constructor(private http: HttpClient, private toastr: ToastrService, private auth: AuthService) {\n  }\n\n  // ---- User\n\n  public registerUser(user: User): Observable {\n    return this.http.post(`${this.baseUrl}register`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public loginUser(user: User): Observable {\n    console.log(user);\n    return this.http.post(`${this.baseUrl}login`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public changeUserPassword(password: any): Observable {\n    console.log(password);\n    return this.http.put(`${this.baseUrl}changeuserpw`, password).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  // ------ entries\n\n  public createEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.post(`${this.baseUrl}createentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public updateEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.put(`${this.baseUrl}changeentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public deleteEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.delete(`${this.baseUrl}deleteentry/${entry.id}`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * getting all travellist entries\n   */\n  public getAllEntries(): Observable {\n    return this.http.get(`${this.baseUrl}getallentries`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  public tokenrefresh(): Observable {\n    return this.http.get(`${this.baseUrl}tokenrefresh`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * handle errors to prevent crashes\n   * @param err thrown error by backend\n   * @returns Use observable for better handling\n   */\n  private handleError(err: HttpErrorResponse) {\n    if (err.error instanceof ErrorEvent) {\n      console.log('client error');\n    } else {\n      if (err.error && err.error.body) {\n        console.error(`Backend returned code ${err.status}, ${err.error.message} is:`, err.error.body);\n        return throwError(err.error.body);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned ${err}, body was: `, err);\n        return throwError(err);\n      }\n    }\n    // Not reachbale for now:\n    // return an ErrorObservable with a user-facing error message\n    return throwError('Could not access the API.');\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'travel-blog-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'travel-blog-app';\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    Loading...\n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Loading...  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nInterceptor\n\nInterceptor\n\nAppModule -->\n\nInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                        \n                            AuthService\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            Interceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            DashboardModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { APP_ROUTES } from './app.routes';\nimport {DashboardModule} from './dashboard/dashboard.module';\nimport {RouterModule} from '@angular/router';\nimport {ApiService} from './shared/api.service';\nimport {AuthService} from './service/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Interceptor } from './service/interceptor';\nimport {ErrorInterceptor} from './service/error-interceptor';\nimport {ToastrModule} from 'ngx-toastr';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { NavigationComponent} from './navigation/navigation.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {ModalModule} from 'ngx-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PageNotFoundComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(APP_ROUTES),\n    NoopAnimationsModule,\n    DashboardModule,\n    ToastrModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  providers: [ApiService, AuthService, ToastrService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Interceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth-guard.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../service/auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n\n  constructor(private authService: AuthService, private router: Router) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean {\n    if (this.authService.isAuthenticated()) {\n      console.log('authenticated');\n      return true;\n    }\n    console.log('not authenticated');\n    // navigate to login page\n    this.router.navigate(['/login']);\n    // savely redirect\n    return false;\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isTokenExpired\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, data: BlogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/auth.service.ts:16\n                \n            \n\n\n            \n                \n                    this is used to clear anything that needs to be removed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/auth.service.ts:24\n                \n            \n\n\n            \n                \n                    check for expiration and if token is still existing or not\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisTokenExpired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(token: Token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                Token\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/auth.service.ts:44\n                \n            \n\n\n            \n                \n                    this is used to clear local storage and also the route to login\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {BlogService} from '../shared/blog.service';\nimport {Token} from '../shared/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router: Router, private data: BlogService) { }\n\n  /**\n   * this is used to clear anything that needs to be removed\n   */\n  clear(): void {\n    localStorage.clear();\n  }\n\n  /**\n   * check for expiration and if token is still existing or not\n   * @return {boolean}\n   */\n  isAuthenticated(): boolean {\n    return localStorage.getItem('token') != null && !this.isTokenExpired();\n  }\n\n  isTokenExpired(): boolean {\n    return false;\n  }\n\n\n  login(token: Token): void {\n    localStorage.setItem('token', token.accessToken);\n    if (token.id) {\n      localStorage.setItem('user', token.id);\n    }\n    this.router.navigate(['/dashboard']);\n  }\n\n  /**\n   * this is used to clear local storage and also the route to login\n   */\n  logout(): void {\n    this.clear();\n    this.data.removeUser();\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlogService.html":{"url":"injectables/BlogService.html","title":"injectable - BlogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/blog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                behaviorEntries\n                            \n                            \n                                    Private\n                                behaviorUser\n                            \n                            \n                                dataStore\n                            \n                            \n                                entries\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewEntry\n                            \n                            \n                                removeExistingEntry\n                            \n                            \n                                removeUser\n                            \n                            \n                                setAllEntries\n                            \n                            \n                                setUser\n                            \n                            \n                                updateExistingEntry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/blog.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewEntry\n                        \n                        \n                    \n                \n            \n            \n                \naddNewEntry(entry: Entry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/blog.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeExistingEntry\n                        \n                        \n                    \n                \n            \n            \n                \nremoveExistingEntry(entryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/blog.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \nremoveUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/blog.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAllEntries\n                        \n                        \n                    \n                \n            \n            \n                \nsetAllEntries(entries: Entry[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/blog.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entries\n                                    \n                                                Entry[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \nsetUser(user: Token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/blog.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Token\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateExistingEntry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateExistingEntry(entry: Entry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/blog.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Entry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            behaviorEntries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            behaviorUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TravelBlogModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    listOfAllEntries: [],\n    currentUser: null\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {Token} from './api.service';\n\n\nexport class Entry {\n  id?: string;\n  title: string;\n  text: string;\n  date?: Date;\n  author?: string; // nickname\n  author_id?: string;\n  tags?: string[];\n  image?: string;\n}\n\n/**\n * model of the application data\n */\nexport interface TravelBlogModel {\n  /**\n   * list of all displayed travels\n   */\n  listOfAllEntries: Entry[];\n  /**\n   * current user\n   */\n  currentUser: Token;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  entries: Observable;\n  user: Observable;\n  private behaviorEntries: BehaviorSubject;\n  private behaviorUser: BehaviorSubject;\n  dataStore: TravelBlogModel = {\n    listOfAllEntries: [],\n    currentUser: null\n  };\n\n  constructor() {\n    this.dataStore = {\n      listOfAllEntries: [],\n      currentUser: null\n    };\n    this.behaviorEntries = new BehaviorSubject([]) as BehaviorSubject;\n    this.entries = this.behaviorEntries.asObservable();\n\n    this.behaviorUser = new BehaviorSubject(null) as BehaviorSubject;\n    this.user = this.behaviorUser.asObservable();\n  }\n\n  setUser(user: Token) {\n    this.dataStore.currentUser = user;\n    this.behaviorUser.next(Object.assign({}, this.dataStore).currentUser);\n  }\n\n  removeUser() {\n    this.dataStore.currentUser = null;\n    this.behaviorUser.next(Object.assign({}, this.dataStore).currentUser);\n  }\n\n  setAllEntries(entries: Entry[]) {\n    this.dataStore.listOfAllEntries = entries;\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  addNewEntry(entry: Entry) {\n    this.dataStore.listOfAllEntries.push(entry);\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  updateExistingEntry(entry: Entry) {\n    this.dataStore.listOfAllEntries.forEach((elem, i) => {\n      if (elem.id === entry.id) { this.dataStore.listOfAllEntries[i] = entry; }\n    });\n\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  removeExistingEntry(entryId: string) {\n    this.dataStore.listOfAllEntries.forEach((elem, i) => {\n      if (elem.id === entryId) { this.dataStore.listOfAllEntries.splice(i, 1); }\n    });\n\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nEntryComponent\n\nEntryComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nEntryComponent->DashboardModule\n\n\n\n\n\nEntryHeaderComponent\n\nEntryHeaderComponent\n\nDashboardModule -->\n\nEntryHeaderComponent->DashboardModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nDashboardModule -->\n\nFilterPipe->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nDashboardModule -->\n\nHomeComponent->DashboardModule\n\n\n\n\n\nNewEntryComponent\n\nNewEntryComponent\n\nDashboardModule -->\n\nNewEntryComponent->DashboardModule\n\n\n\n\n\nNewTravelTagsComponent\n\nNewTravelTagsComponent\n\nDashboardModule -->\n\nNewTravelTagsComponent->DashboardModule\n\n\n\n\n\nTravelTagsComponent\n\nTravelTagsComponent\n\nDashboardModule -->\n\nTravelTagsComponent->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EntryComponent\n                        \n                        \n                            EntryHeaderComponent\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NewEntryComponent\n                        \n                        \n                            NewTravelTagsComponent\n                        \n                        \n                            TravelTagsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport {AuthGuardService} from '../guards/auth-guard.service';\nimport {RouterModule} from '@angular/router';\nimport { dashboardRoutes } from './dashboard.routes';\nimport { EntryComponent } from './entry/entry.component';\nimport {FormsModule} from '@angular/forms';\nimport {FilterPipe} from '../filter/filter.pipe';\nimport { NewEntryComponent } from './new-entry/new-entry.component';\nimport { TravelTagsComponent } from './travel-tags/travel-tags.component';\nimport { NewTravelTagsComponent } from './new-travel-tags/new-travel-tags.component';\nimport { EntryHeaderComponent } from './entry-header/entry-header.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    EntryComponent,\n    FilterPipe,\n    NewEntryComponent,\n    TravelTagsComponent,\n    NewTravelTagsComponent,\n    EntryHeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(dashboardRoutes)\n  ],\n  providers: [\n    AuthGuardService\n  ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entry.html":{"url":"classes/Entry.html","title":"class - Entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/blog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                author\n                            \n                            \n                                    Optional\n                                author_id\n                            \n                            \n                                    Optional\n                                date\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                image\n                            \n                            \n                                    Optional\n                                tags\n                            \n                            \n                                text\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/blog.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {Token} from './api.service';\n\n\nexport class Entry {\n  id?: string;\n  title: string;\n  text: string;\n  date?: Date;\n  author?: string; // nickname\n  author_id?: string;\n  tags?: string[];\n  image?: string;\n}\n\n/**\n * model of the application data\n */\nexport interface TravelBlogModel {\n  /**\n   * list of all displayed travels\n   */\n  listOfAllEntries: Entry[];\n  /**\n   * current user\n   */\n  currentUser: Token;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  entries: Observable;\n  user: Observable;\n  private behaviorEntries: BehaviorSubject;\n  private behaviorUser: BehaviorSubject;\n  dataStore: TravelBlogModel = {\n    listOfAllEntries: [],\n    currentUser: null\n  };\n\n  constructor() {\n    this.dataStore = {\n      listOfAllEntries: [],\n      currentUser: null\n    };\n    this.behaviorEntries = new BehaviorSubject([]) as BehaviorSubject;\n    this.entries = this.behaviorEntries.asObservable();\n\n    this.behaviorUser = new BehaviorSubject(null) as BehaviorSubject;\n    this.user = this.behaviorUser.asObservable();\n  }\n\n  setUser(user: Token) {\n    this.dataStore.currentUser = user;\n    this.behaviorUser.next(Object.assign({}, this.dataStore).currentUser);\n  }\n\n  removeUser() {\n    this.dataStore.currentUser = null;\n    this.behaviorUser.next(Object.assign({}, this.dataStore).currentUser);\n  }\n\n  setAllEntries(entries: Entry[]) {\n    this.dataStore.listOfAllEntries = entries;\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  addNewEntry(entry: Entry) {\n    this.dataStore.listOfAllEntries.push(entry);\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  updateExistingEntry(entry: Entry) {\n    this.dataStore.listOfAllEntries.forEach((elem, i) => {\n      if (elem.id === entry.id) { this.dataStore.listOfAllEntries[i] = entry; }\n    });\n\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  removeExistingEntry(entryId: string) {\n    this.dataStore.listOfAllEntries.forEach((elem, i) => {\n      if (elem.id === entryId) { this.dataStore.listOfAllEntries.splice(i, 1); }\n    });\n\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryComponent.html":{"url":"components/EntryComponent.html","title":"component - EntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/entry/entry.component.ts\n\n\n    \n        Description\n    \n    \n        component for travel entry\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entry\n            \n\n            \n                styleUrls\n                ./entry.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editingEntry\n                            \n                            \n                                    Public\n                                isEditing\n                            \n                            \n                                modalRef\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTravelTag\n                            \n                            \n                                closeModal\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                editing\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, data: BlogService, toastr: ToastrService, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/entry/entry.component.ts:44\n                            \n                        \n\n                \n                    \n                            constructor defining all private services\nDO NOT MAKE SERVICE PUBLIC!\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                api service for calling backend\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data service for holding the data in the application\n\n                                                        \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                showing informations to the user with the toastr service\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        entry\n                    \n                \n                \n                    \n                        Type :         Entry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/entry/entry.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTravelTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTravelTag(travelTag: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:137\n                \n            \n\n\n            \n                \n                    add a traveltag to the current entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    travelTag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \ncloseModal(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:117\n                \n            \n\n\n            \n                \n                    closes the modal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:125\n                \n            \n\n\n            \n                \n                    delete an entry from the database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:75\n                \n            \n\n\n            \n                \n                    enable and disable editing\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:61\n                \n            \n\n\n            \n                \n                    calcs the images for the entry\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenModal(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:109\n                \n            \n\n\n            \n                \n                    opens the modals from the class, here suggestion modal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry/entry.component.ts:85\n                \n            \n\n\n            \n                \n                    save an entry to the database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editingEntry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Entry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/entry/entry.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEditing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/entry/entry.component.ts:38\n                            \n                        \n\n                \n                    \n                        is editing if true the user can edit otherwise editing is disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/entry/entry.component.ts:44\n                            \n                        \n\n                \n                    \n                        dependency for modals inside the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/entry/entry.component.ts:31\n                            \n                        \n\n                \n                    \n                        userId for coloring the entries from a user in another color\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {BlogService, Entry} from '../../shared/blog.service';\nimport {ApiService} from '../../shared/api.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap';\n\n/**\n * component for travel entry\n */\n@Component({\n  selector: 'app-entry',\n  templateUrl: './entry.component.html',\n  styleUrls: ['./entry.component.css']\n})\nexport class EntryComponent implements OnInit {\n\n  /**\n   * @type Entry entry that is displayed in the component\n   */\n  @Input() entry: Entry;\n\n  /**\n   * @type Entry\n   * entry for editing data\n   */\n  editingEntry: Entry;\n\n  /**\n   * userId for coloring the entries from a user in another color\n   */\n  userId: string;\n\n  // only write type if value is not set otherwise its redundant\n  /**\n   * is editing if true the user can edit otherwise editing is disabled\n   * @type Boolean\n   */\n  public isEditing = false;\n\n\n  /**\n   * dependency for modals inside the application\n   */\n  modalRef: BsModalRef;\n\n  /**\n   * constructor defining all private services\n   * DO NOT MAKE SERVICE PUBLIC!\n   * @param api api service for calling backend\n   * @param data data service for holding the data in the application\n   * @param toastr showing informations to the user with the toastr service\n   */\n  constructor(private api: ApiService, private data: BlogService,\n              private toastr: ToastrService, private modalService: BsModalService) {\n\n  }\n\n  /**\n   * calcs the images for the entry\n   */\n  ngOnInit() {\n    const imageNumber =  Math.floor(Math.random() * 3) + 1;\n    this.entry.image = `../../../assets/${imageNumber}.jpeg`;\n\n    // set the user id from the datastore\n    if (this.data.dataStore.currentUser.id) {\n      this.userId = this.data.dataStore.currentUser.id;\n    }\n\n  }\n\n  /**\n   * enable and disable editing\n   */\n  public editing(): void {\n    if (!this.isEditing) {\n      this.editingEntry = this.entry;\n    }\n    this.isEditing = !this.isEditing;\n  }\n\n  /**\n   * save an entry to the database\n   */\n  public save() {\n    console.log(this.entry.title);\n    // if used more often a parser function could be writen\n    const updateEntry = {\n      id: this.editingEntry.id,\n      title: this.entry.title,\n      text: this.editingEntry.text,\n      date: this.editingEntry.date,\n      author: this.editingEntry.author, // nickname\n      author_id: this.editingEntry.author_id,\n      tags: this.editingEntry.tags\n    }\n    this.api.updateEntry(updateEntry).subscribe(elem => {\n      this.data.updateExistingEntry(elem);\n      this.editing();\n      this.toastr.success(`Updated Entry with title: ${this.editingEntry.title}`, 'Success!');\n    });\n  }\n\n\n  /**\n   * opens the modals from the class, here suggestion modal\n   * @param {TemplateRef} template\n   */\n  openModal(template: TemplateRef) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  /**\n   * closes the modal\n   * @param {TemplateRef} template\n   */\n  closeModal(template: TemplateRef) {\n    this.modalRef.hide();\n  }\n\n\n  /**\n   * delete an entry from the database\n   */\n  public delete() {\n    this.api.deleteEntry(this.entry).subscribe(elem => {\n      this.data.removeExistingEntry(this.entry.id);\n      this.modalRef.hide();\n      this.toastr.success('deleted entry!', 'Success!');\n    });\n  }\n\n  /**\n   * add a traveltag to the current entry\n   * @param travelTag\n   */\n  public addTravelTag(travelTag: string) {\n    this.editingEntry.tags.push(travelTag);\n    console.log(this.editingEntry.tags);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n\n      \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n          {{entry.text}}\n        \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n\n  \n    Edit User:\n  \n  \n    \n      Do you really want to remove this entry?\n\n    \n    \n\n  \n  \n    \n      \n        No\n      \n      \n        Yes\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./entry.component.css\n                \n                .badge {\n  margin: 1px;\n}\n\ntextarea{\n  width: 100%;\n  height: 100%;\n}\n\n.owner {\n  background-color: rgba(40, 58, 94, 0.2);\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                      {{entry.text}}                                                                                      Edit User:              Do you really want to remove this entry?                              No                    Yes            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryHeaderComponent.html":{"url":"components/EntryHeaderComponent.html","title":"component - EntryHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/entry-header/entry-header.component.ts\n\n\n    \n        Description\n    \n    \n        header of an entry\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entry-header\n            \n\n            \n                styleUrls\n                ./entry-header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entry-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titleValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                entryDate\n                            \n                            \n                                isEditing\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                titleChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/entry-header/entry-header.component.ts:50\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        author\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:20\n                            \n                        \n                \n                    \n                        author of the entry\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entryDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:24\n                            \n                        \n                \n                    \n                        last changed entry date\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:16\n                            \n                        \n                \n                    \n                        is editing enabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:34\n                            \n                        \n                \n                    \n                        get the title\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        titleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:41\n                            \n                        \n                \n                    \n                        emit changed title\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:29\n                            \n                        \n\n                \n                    \n                        title value\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n\n                \n                    \n                        settitle(val)\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/entry-header/entry-header.component.ts:47\n                                \n                            \n                    \n                        \n                                set the title\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * header of an entry\n */\n@Component({\n  selector: 'app-entry-header',\n  templateUrl: './entry-header.component.html',\n  styleUrls: ['./entry-header.component.css']\n})\nexport class EntryHeaderComponent implements OnInit {\n\n  /**\n   * is editing enabled\n   */\n  @Input() isEditing: boolean;\n  /**\n   * author of the entry\n   */\n  @Input() author: string;\n  /**\n   * last changed entry date\n   */\n  @Input() entryDate: Date;\n\n  /**\n   * title value\n   */\n  titleValue = '';\n\n  /**\n   * get the title\n   */\n  @Input() get title() {\n    return this.titleValue;\n  }\n\n  /**\n   * emit changed title\n   */\n  @Output() titleChange = new EventEmitter();\n\n  /**\n   * set the title\n   * @param val\n   */\n  set title(val) {\n    this.titleValue = val;\n    this.titleChange.emit(this.titleValue);\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n  \n\n\n\n  \n    Author: {{author}}\n    Last updated: {{entryDate}}\n  \n\n\n    \n\n    \n                \n                    ./entry-header.component.css\n                \n                .entry-title {\n  font-style: italic;\n  font-size: 12px;\n  margin-bottom: -2px;\n}\n\nhr {\n  margin: 0;\n  margin-bottom: 2px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}            Author: {{author}}    Last updated: {{entryDate}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntryHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCounter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, api: ApiService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/error-interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/error-interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/error-interceptor.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService} from './auth.service';\nimport {ApiService} from '../shared/api.service';\nimport {ToastrService} from 'ngx-toastr';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  errorCounter = 0;\n\n  constructor(private auth: AuthService, private api: ApiService, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401 || err.status === 403) {\n        // auto logout if 401 response returned from api\n        if (this.errorCounter  {\n            console.log(elem);\n            this.auth.login(elem);\n          });\n        } else {\n\n          this.errorCounter = 0;\n          this.auth.logout();\n        }\n      } else {\n        this.toastr.error(err.error.message, 'Error!');\n      }\n\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/filter/filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                pipe for filtering movie objects\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(items: any[], searchTerm: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filter/filter.pipe.ts:18\n                \n            \n\n\n            \n                \n                    transform the entrie objects by filtering either by tags, name, creator or by combined attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchTerm\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * pipe for filtering movie objects\n */\n@Pipe({\n  name: 'filter'\n})\n/**\n * @author Hannah Schieber\n * @description filtering entires\n */\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * transform the entrie objects by filtering either by tags, name, creator or by combined attributes\n   */\n  transform(items: any[], searchTerm: any): any {\n    console.log(searchTerm);\n    if (!items) return [];\n    if (!searchTerm) return items;\n    searchTerm = searchTerm.toLowerCase();\n    const res = [];\n    items.forEach(elem => {\n        if (elem.title && elem.title.toLowerCase().includes(searchTerm)) {\n          res.push(elem);\n        }\n    });\n    return res;\n\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        home view component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                searchTerm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, data: BlogService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                            constructor defining all private services\nDO NOT MAKE SERVICE PUBLIC!\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                api service for calling backend\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data service for holding the data in the application\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                authentication service for the auth guard\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/home/home.component.ts:41\n                \n            \n\n\n            \n                \n                    get all entries on load\ncheck if user is authenticated\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Entry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                        all entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/home/home.component.ts:19\n                            \n                        \n\n                \n                    \n                        searchterm for filter pipe\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {BlogService, Entry} from '../../shared/blog.service';\nimport {ApiService, Token} from '../../shared/api.service';\nimport {AuthService} from '../../service/auth.service';\n\n/**\n * home view component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * searchterm for filter pipe\n   */\n  searchTerm: string;\n\n  /**\n   * all entries\n   */\n  entries: Entry[];\n\n  /**\n   * constructor defining all private services\n   * DO NOT MAKE SERVICE PUBLIC!\n   * @param api api service for calling backend\n   * @param data data service for holding the data in the application\n   * @param auth authentication service for the auth guard\n   */\n  constructor(private api: ApiService, private data: BlogService, private auth: AuthService) {\n\n  }\n\n  /**\n   * get all entries on load\n   * check if user is authenticated\n   */\n  ngOnInit() {\n    this.api.getAllEntries().subscribe(elem => {\n      this.data.setAllEntries(elem);\n      this.entries = this.data.dataStore.listOfAllEntries;\n    });\n\n    console.log('init dashboard',  (localStorage.getItem('token') !== 'undefined'));\n    if ((localStorage.getItem('token') && localStorage.getItem('user'))\n    && !(localStorage.getItem('token') === 'undefined')) {\n      const user: Token = {\n        accessToken: localStorage.getItem('token'),\n        id: localStorage.getItem('user')\n      };\n      this.data.setUser(user);\n    } else {\n\n      this.auth.logout();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                app-entry {\n  margin: 5px;\n}\n\n.home {\n  margin-top: 2%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/Interceptor.html":{"url":"interceptors/Interceptor.html","title":"interceptor - Interceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  Interceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, blogService: BlogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blogService\n                                                  \n                                                        \n                                                                        BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from './auth.service';\nimport {BlogService} from '../shared/blog.service';\nimport {finalize} from 'rxjs/operators';\n\n@Injectable()\nexport class Interceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService, private blogService: BlogService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    if (this.auth.isAuthenticated()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n    }\n    // this.blogService.show();\n    return next.handle(request).pipe(\n      // finalize(() => this.blogService.hide())\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLogin\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, auth: AuthService, toastr: ToastrService, data: BlogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ApiService, User} from '../shared/api.service';\nimport {AuthService} from '../service/auth.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {BlogService} from '../shared/blog.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public isLogin = true;\n\n  public user: User;\n\n\n\n  constructor(private api: ApiService, private auth: AuthService,\n              private toastr: ToastrService, private data: BlogService) { }\n\n  ngOnInit() {\n    this.user = {\n      username: '',\n      password: '',\n    };\n  }\n\n\n  public register(): void {\n    if (!this.isLogin) {\n      if (this.user.username !== '' && this.user.password !== '' && this.user.passwordAgain !== ''\n        && (this.user.password === this.user.passwordAgain)) {\n        const user = {\n          username: this.user.username,\n          password: this.user.password,\n          phonenumber: this.user.phonenumber,\n          email: this.user.email\n        }\n        this.api.registerUser(this.user).subscribe(elem => {\n          console.log(elem);\n          this.toastr.success(elem.message, 'Success!');\n        });\n      } else {\n        console.log(this.user.password !== this.user.passwordAgain, this.user.password , this.user.passwordAgain)\n        if (this.user.password !== this.user.passwordAgain) {\n          this.toastr.warning('password mismatch!', 'Warning!');\n        } else {\n          this.toastr.warning('invalid credentials!', 'Warning!');\n        }\n        return;\n      }\n    }\n    this.isLogin = !this.isLogin;\n  }\n\n  public login(): void {\n    console.log(this.user);\n    if (this.isLogin) {\n      this.api.loginUser(this.user).subscribe(elem => {\n        this.auth.login(elem);\n        this.toastr.success('Welcome');\n        console.log(this.auth.isAuthenticated());\n      });\n    } else {\n      this.isLogin = !this.isLogin;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n\n      \n        \n          Login\n        \n      \n      \n        \n          \n            E-Mail\n            \n              \n            \n          \n        \n        \n          Username\n          \n            \n          \n        \n        \n          Password\n          \n            \n          \n        \n        \n          \n            Password again\n            \n              \n            \n          \n          \n            Mobil Number\n            \n              \n            \n          \n        \n\n        \n          \n            \n              \n              Register\n          \n          \n            \n              \n              Login\n          \n        \n        \n          \n            \n              \n              Login\n          \n          \n            \n              \n              Register\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .row {\n  margin-top: 5px;\n}\n\n.card {\n  margin-top: 10%;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Login                                                  E-Mail                                                                          Username                                                          Password                                                                      Password again                                                                      Mobil Number                                                                                                                  Register                                                            Login                                                                            Login                                                            Register                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/navigation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                newPasswordAgain\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                closeModal\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, api: ApiService, modalService: BsModalService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/navigation.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \ncloseModal(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:47\n                \n            \n\n\n            \n                \n                    closes the modal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenModal(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:39\n                \n            \n\n\n            \n                \n                    opens the modals from the class, here suggestion modal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:23\n                            \n                        \n\n                \n                    \n                        dependency for modals inside the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPasswordAgain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/navigation/navigation.component.ts:76\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {AuthService} from '../service/auth.service';\nimport {ApiService} from '../shared/api.service';\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap';\nimport {ToastrService} from 'ngx-toastr';\nimport {BlogService} from '../shared/blog.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n\n  @Input() isLoggedIn = false;\n\n  newPassword: string;\n  newPasswordAgain: string;\n\n  /**\n   * dependency for modals inside the application\n   */\n  modalRef: BsModalRef;\n\n\n  constructor(private auth: AuthService, private api: ApiService,\n              private modalService: BsModalService, private toastr: ToastrService) {\n    console.log('tokenrefresh');\n    this.api.tokenrefresh().subscribe(elem => {\n      this.auth.login(elem);\n    });\n  }\n\n\n  /**\n   * opens the modals from the class, here suggestion modal\n   * @param {TemplateRef} template\n   */\n  openModal(template: TemplateRef) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  /**\n   * closes the modal\n   * @param {TemplateRef} template\n   */\n  closeModal(template: TemplateRef) {\n    this.modalRef.hide();\n    this.toastr.warning('You changed or saved no data!');\n  }\n\n\n  public logout(): void {\n    this.auth.logout();\n  }\n\n  public editUser(): void {\n    console.log('edit user');\n  }\n\n  public changePassword(): void {\n    if (this.newPassword === this.newPasswordAgain) {\n      const pw = {\n        newpw: this.newPassword\n      };\n      this.api.changeUserPassword(pw).subscribe(elem => {\n        console.log(elem);\n        this.toastr.success('Password changed!', 'Success');\n        this.modalRef.hide();\n      });\n    } else {\n      this.toastr.warning('New Pssswords did not match', 'Warning');\n    }\n  }\n\n  get token(): any {\n    return this.auth.isAuthenticated();\n  }\n\n}\n\n    \n\n    \n        \n  World Traveling\n  \n    \n  \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n\n\n  \n    Edit User:\n  \n  \n    \n      New Password:\n      \n        \n      \n    \n    \n    \n      New Password again:\n      \n        \n      \n    \n  \n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                nav {\n  background-color: #283a5e;\n  color: #ffffff;\n}\n\n.fas {\n  color: #ffffff;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\nli a {\n  display: block;\n}\n\nul li {\n  display:inline;\n}\n\n.nav-link {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  World Traveling                                                                                                      Edit User:              New Password:                                      New Password again:                                Save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewEntryComponent.html":{"url":"components/NewEntryComponent.html","title":"component - NewEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/new-entry/new-entry.component.ts\n\n\n    \n        Description\n    \n    \n        create a new entry\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-entry\n            \n\n            \n                styleUrls\n                ./new-entry.component.css\n            \n\n\n\n            \n                templateUrl\n                ./new-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditing\n                            \n                            \n                                newEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTravelTag\n                            \n                            \n                                    Public\n                                createEntry\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleEntry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, toastr: ToastrService, data: BlogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/new-entry/new-entry.component.ts:28\n                            \n                        \n\n                \n                    \n                            constructor defining all private services\nDO NOT MAKE SERVICE PUBLIC!\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                api service for calling backend\n\n                                                        \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                showing informations to the user with the toastr service\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data service for holding the data in the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTravelTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTravelTag(travelTag: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/new-entry/new-entry.component.ts:76\n                \n            \n\n\n            \n                \n                    add a tag\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    travelTag\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/new-entry/new-entry.component.ts:45\n                \n            \n\n\n            \n                \n                    create the entry\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/new-entry/new-entry.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleEntry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/new-entry/new-entry.component.ts:61\n                \n            \n\n\n            \n                \n                    stop editing\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEditing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/new-entry/new-entry.component.ts:19\n                            \n                        \n\n                \n                    \n                        is editing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEntry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Entry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    text: '',\n    tags: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/new-entry/new-entry.component.ts:24\n                            \n                        \n\n                \n                    \n                        params of new entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {BlogService, Entry} from '../../shared/blog.service';\nimport {ApiService} from '../../shared/api.service';\nimport {ToastrService} from 'ngx-toastr';\n\n/**\n * create a new entry\n */\n@Component({\n  selector: 'app-new-entry',\n  templateUrl: './new-entry.component.html',\n  styleUrls: ['./new-entry.component.css']\n})\nexport class NewEntryComponent implements OnInit {\n\n  /**\n   * is editing\n   */\n  isEditing = false;\n\n  /**\n   * params of new entry\n   */\n  newEntry: Entry = {\n    title: '',\n    text: '',\n    tags: []\n  };\n\n  /**\n   * constructor defining all private services\n   * DO NOT MAKE SERVICE PUBLIC!\n   * @param api api service for calling backend\n   * @param toastr showing informations to the user with the toastr service\n   * @param data data service for holding the data in the application\n   */\n  constructor(private api: ApiService, private toastr: ToastrService, private data: BlogService) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * create the entry\n   */\n  public createEntry(): void {\n    this.api.createEntry(this.newEntry).subscribe(elem => {\n      console.log(elem);\n      this.toastr.success('created new entry', 'Success');\n      this.newEntry = {\n        title: '',\n        text: ''\n      };\n      this.isEditing = !this.isEditing;\n      this.data.addNewEntry(elem);\n    });\n  }\n\n  /**\n   * stop editing\n   */\n  public toggleEntry(): void {\n    this.isEditing = !this.isEditing;\n    if (!this.isEditing) {\n      this.newEntry = {\n        title: '',\n        text: '',\n        tags: []\n      };\n    }\n  }\n\n  /**\n   * add a tag\n   * @param travelTag\n   */\n  public addTravelTag(travelTag: string) {\n    this.newEntry.tags.push(travelTag);\n    console.log(this.newEntry.tags);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    Create New Post\n  \n  \n    \n      \n        \n          \n        \n      \n      \n      \n        \n           \n           \n        \n      \n      \n      \n        \n          {{newEntry.tags}}\n          \n\n          \n        \n        \n          \n        \n      \n    \n    \n      \n        Create\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./new-entry.component.css\n                \n                textarea{\n  width: 100%;\n}\n\n.card-header {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Create New Post                                                                                                                                    {{newEntry.tags}}                                                                                  Create            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewTravelTagsComponent.html":{"url":"components/NewTravelTagsComponent.html","title":"component - NewTravelTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewTravelTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/new-travel-tags/new-travel-tags.component.ts\n\n\n    \n        Description\n    \n    \n        new travel tag\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-travel-tags\n            \n\n            \n                styleUrls\n                ./new-travel-tags.component.css\n            \n\n\n\n            \n                templateUrl\n                ./new-travel-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                travelTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTravelTag\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                newTravelTag\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/new-travel-tags/new-travel-tags.component.ts:22\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        newTravelTag\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/new-travel-tags/new-travel-tags.component.ts:22\n                            \n                        \n                \n                    \n                        output emitter for travel tag\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addTravelTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTravelTag()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/new-travel-tags/new-travel-tags.component.ts:32\n                \n            \n\n\n            \n                \n                    emit the new travel tag\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/new-travel-tags/new-travel-tags.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            travelTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/new-travel-tags/new-travel-tags.component.ts:17\n                            \n                        \n\n                \n                    \n                        name of the travel tag\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n/**\n * new travel tag\n */\n@Component({\n  selector: 'app-new-travel-tags',\n  templateUrl: './new-travel-tags.component.html',\n  styleUrls: ['./new-travel-tags.component.css']\n})\nexport class NewTravelTagsComponent implements OnInit {\n\n\n  /**\n   * name of the travel tag\n   */\n  travelTag = '';\n\n  /**\n   * output emitter for travel tag\n   */\n  @Output() newTravelTag = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * emit the new travel tag\n   */\n  public addTravelTag(): void {\n    this.newTravelTag.emit(this.travelTag);\n    this.travelTag = '';\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./new-travel-tags.component.css\n                \n                .form-control-tag{\n  display: inline;\n  width: 70%;\n  background-color: rgba(0, 0, 0, 0);\n  margin-right: 1px;\n  line-height: 1px;\n  font-size: 12px;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewTravelTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/page-not-found/page-not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/page-not-found/page-not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    404\n  \n  this is not the page you are looking for\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404    this is not the page you are looking for'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReturnValueRegister.html":{"url":"classes/ReturnValueRegister.html","title":"class - ReturnValueRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReturnValueRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {Entry} from './blog.service';\nimport {Observable, throwError} from 'rxjs';\nimport {ToastrService} from 'ngx-toastr';\nimport {AuthService} from '../service/auth.service';\n\nexport class User {\n  username: string;\n  password: string;\n  passwordAgain?: string;\n  email?: string;\n  phonenumber?: string;\n\n}\n\nexport class ReturnValueRegister {\n  message: string;\n}\n\nexport class Token {\n  accessToken: string;\n  refreshToken?: string;\n  id?: string;\n}\n\n\n/**\n *  @author Hannah Schieber\n * Service to access endpoints\n */\n@Injectable()\n/**\n * @author Hannah Schieber\n * Service to access endpoints\n */\nexport class ApiService {\n\n  /**\n   * url for all database resources\n   */\n  private baseUrl = 'http://localhost:5000/';\n\n  /**\n   *\n   * constructor for service setting httpClient for requests receiving JSON-Data.\n   * @param {HttpClient} http http client to safe reponses by default as JSON\n   */\n  constructor(private http: HttpClient, private toastr: ToastrService, private auth: AuthService) {\n  }\n\n  // ---- User\n\n  public registerUser(user: User): Observable {\n    return this.http.post(`${this.baseUrl}register`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public loginUser(user: User): Observable {\n    console.log(user);\n    return this.http.post(`${this.baseUrl}login`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public changeUserPassword(password: any): Observable {\n    console.log(password);\n    return this.http.put(`${this.baseUrl}changeuserpw`, password).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  // ------ entries\n\n  public createEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.post(`${this.baseUrl}createentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public updateEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.put(`${this.baseUrl}changeentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public deleteEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.delete(`${this.baseUrl}deleteentry/${entry.id}`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * getting all travellist entries\n   */\n  public getAllEntries(): Observable {\n    return this.http.get(`${this.baseUrl}getallentries`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  public tokenrefresh(): Observable {\n    return this.http.get(`${this.baseUrl}tokenrefresh`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * handle errors to prevent crashes\n   * @param err thrown error by backend\n   * @returns Use observable for better handling\n   */\n  private handleError(err: HttpErrorResponse) {\n    if (err.error instanceof ErrorEvent) {\n      console.log('client error');\n    } else {\n      if (err.error && err.error.body) {\n        console.error(`Backend returned code ${err.status}, ${err.error.message} is:`, err.error.body);\n        return throwError(err.error.body);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned ${err}, body was: `, err);\n        return throwError(err);\n      }\n    }\n    // Not reachbale for now:\n    // return an ErrorObservable with a user-facing error message\n    return throwError('Could not access the API.');\n  }\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            refreshToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {Entry} from './blog.service';\nimport {Observable, throwError} from 'rxjs';\nimport {ToastrService} from 'ngx-toastr';\nimport {AuthService} from '../service/auth.service';\n\nexport class User {\n  username: string;\n  password: string;\n  passwordAgain?: string;\n  email?: string;\n  phonenumber?: string;\n\n}\n\nexport class ReturnValueRegister {\n  message: string;\n}\n\nexport class Token {\n  accessToken: string;\n  refreshToken?: string;\n  id?: string;\n}\n\n\n/**\n *  @author Hannah Schieber\n * Service to access endpoints\n */\n@Injectable()\n/**\n * @author Hannah Schieber\n * Service to access endpoints\n */\nexport class ApiService {\n\n  /**\n   * url for all database resources\n   */\n  private baseUrl = 'http://localhost:5000/';\n\n  /**\n   *\n   * constructor for service setting httpClient for requests receiving JSON-Data.\n   * @param {HttpClient} http http client to safe reponses by default as JSON\n   */\n  constructor(private http: HttpClient, private toastr: ToastrService, private auth: AuthService) {\n  }\n\n  // ---- User\n\n  public registerUser(user: User): Observable {\n    return this.http.post(`${this.baseUrl}register`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public loginUser(user: User): Observable {\n    console.log(user);\n    return this.http.post(`${this.baseUrl}login`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public changeUserPassword(password: any): Observable {\n    console.log(password);\n    return this.http.put(`${this.baseUrl}changeuserpw`, password).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  // ------ entries\n\n  public createEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.post(`${this.baseUrl}createentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public updateEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.put(`${this.baseUrl}changeentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public deleteEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.delete(`${this.baseUrl}deleteentry/${entry.id}`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * getting all travellist entries\n   */\n  public getAllEntries(): Observable {\n    return this.http.get(`${this.baseUrl}getallentries`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  public tokenrefresh(): Observable {\n    return this.http.get(`${this.baseUrl}tokenrefresh`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * handle errors to prevent crashes\n   * @param err thrown error by backend\n   * @returns Use observable for better handling\n   */\n  private handleError(err: HttpErrorResponse) {\n    if (err.error instanceof ErrorEvent) {\n      console.log('client error');\n    } else {\n      if (err.error && err.error.body) {\n        console.error(`Backend returned code ${err.status}, ${err.error.message} is:`, err.error.body);\n        return throwError(err.error.body);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned ${err}, body was: `, err);\n        return throwError(err);\n      }\n    }\n    // Not reachbale for now:\n    // return an ErrorObservable with a user-facing error message\n    return throwError('Could not access the API.');\n  }\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TravelBlogModel.html":{"url":"interfaces/TravelBlogModel.html","title":"interface - TravelBlogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TravelBlogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/blog.service.ts\n        \n\n            \n                Description\n            \n            \n                model of the application data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentUser\n                                \n                                \n                                        listOfAllEntries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                    \n                                \n                                \n                                    \n                                        currentUser:         Token\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    current user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listOfAllEntries\n                                    \n                                \n                                \n                                    \n                                        listOfAllEntries:         Entry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Entry[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of all displayed travels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {Token} from './api.service';\n\n\nexport class Entry {\n  id?: string;\n  title: string;\n  text: string;\n  date?: Date;\n  author?: string; // nickname\n  author_id?: string;\n  tags?: string[];\n  image?: string;\n}\n\n/**\n * model of the application data\n */\nexport interface TravelBlogModel {\n  /**\n   * list of all displayed travels\n   */\n  listOfAllEntries: Entry[];\n  /**\n   * current user\n   */\n  currentUser: Token;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  entries: Observable;\n  user: Observable;\n  private behaviorEntries: BehaviorSubject;\n  private behaviorUser: BehaviorSubject;\n  dataStore: TravelBlogModel = {\n    listOfAllEntries: [],\n    currentUser: null\n  };\n\n  constructor() {\n    this.dataStore = {\n      listOfAllEntries: [],\n      currentUser: null\n    };\n    this.behaviorEntries = new BehaviorSubject([]) as BehaviorSubject;\n    this.entries = this.behaviorEntries.asObservable();\n\n    this.behaviorUser = new BehaviorSubject(null) as BehaviorSubject;\n    this.user = this.behaviorUser.asObservable();\n  }\n\n  setUser(user: Token) {\n    this.dataStore.currentUser = user;\n    this.behaviorUser.next(Object.assign({}, this.dataStore).currentUser);\n  }\n\n  removeUser() {\n    this.dataStore.currentUser = null;\n    this.behaviorUser.next(Object.assign({}, this.dataStore).currentUser);\n  }\n\n  setAllEntries(entries: Entry[]) {\n    this.dataStore.listOfAllEntries = entries;\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  addNewEntry(entry: Entry) {\n    this.dataStore.listOfAllEntries.push(entry);\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  updateExistingEntry(entry: Entry) {\n    this.dataStore.listOfAllEntries.forEach((elem, i) => {\n      if (elem.id === entry.id) { this.dataStore.listOfAllEntries[i] = entry; }\n    });\n\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n  removeExistingEntry(entryId: string) {\n    this.dataStore.listOfAllEntries.forEach((elem, i) => {\n      if (elem.id === entryId) { this.dataStore.listOfAllEntries.splice(i, 1); }\n    });\n\n    this.behaviorEntries.next(Object.assign({}, this.dataStore).listOfAllEntries);\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TravelTagsComponent.html":{"url":"components/TravelTagsComponent.html","title":"component - TravelTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TravelTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/travel-tags/travel-tags.component.ts\n\n\n    \n        Description\n    \n    \n        travel tag of an entry\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-travel-tags\n            \n\n            \n                styleUrls\n                ./travel-tags.component.css\n            \n\n\n\n            \n                templateUrl\n                ./travel-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                travelTags\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/travel-tags/travel-tags.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        travelTags\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/travel-tags/travel-tags.component.ts:16\n                            \n                        \n                \n                    \n                        array of existing travel tags\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/travel-tags/travel-tags.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * travel tag of an entry\n */\n@Component({\n  selector: 'app-travel-tags',\n  templateUrl: './travel-tags.component.html',\n  styleUrls: ['./travel-tags.component.css']\n})\nexport class TravelTagsComponent implements OnInit {\n\n  /**\n   * array of existing travel tags\n   */\n  @Input() travelTags: string[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        {{badge}}\n\n    \n\n    \n                \n                    ./travel-tags.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{badge}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EntryComponent', 'selector': 'app-entry'},{'name': 'EntryHeaderComponent', 'selector': 'app-entry-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewEntryComponent', 'selector': 'app-new-entry'},{'name': 'NewTravelTagsComponent', 'selector': 'app-new-travel-tags'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'TravelTagsComponent', 'selector': 'app-travel-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TravelTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                passwordAgain\n                            \n                            \n                                    Optional\n                                phonenumber\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            passwordAgain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phonenumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {Entry} from './blog.service';\nimport {Observable, throwError} from 'rxjs';\nimport {ToastrService} from 'ngx-toastr';\nimport {AuthService} from '../service/auth.service';\n\nexport class User {\n  username: string;\n  password: string;\n  passwordAgain?: string;\n  email?: string;\n  phonenumber?: string;\n\n}\n\nexport class ReturnValueRegister {\n  message: string;\n}\n\nexport class Token {\n  accessToken: string;\n  refreshToken?: string;\n  id?: string;\n}\n\n\n/**\n *  @author Hannah Schieber\n * Service to access endpoints\n */\n@Injectable()\n/**\n * @author Hannah Schieber\n * Service to access endpoints\n */\nexport class ApiService {\n\n  /**\n   * url for all database resources\n   */\n  private baseUrl = 'http://localhost:5000/';\n\n  /**\n   *\n   * constructor for service setting httpClient for requests receiving JSON-Data.\n   * @param {HttpClient} http http client to safe reponses by default as JSON\n   */\n  constructor(private http: HttpClient, private toastr: ToastrService, private auth: AuthService) {\n  }\n\n  // ---- User\n\n  public registerUser(user: User): Observable {\n    return this.http.post(`${this.baseUrl}register`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public loginUser(user: User): Observable {\n    console.log(user);\n    return this.http.post(`${this.baseUrl}login`, user).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public changeUserPassword(password: any): Observable {\n    console.log(password);\n    return this.http.put(`${this.baseUrl}changeuserpw`, password).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  // ------ entries\n\n  public createEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.post(`${this.baseUrl}createentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public updateEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.put(`${this.baseUrl}changeentry`, entry).pipe(\n      // retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  public deleteEntry(entry: Entry): Observable {\n    console.log(entry);\n    return this.http.delete(`${this.baseUrl}deleteentry/${entry.id}`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * getting all travellist entries\n   */\n  public getAllEntries(): Observable {\n    return this.http.get(`${this.baseUrl}getallentries`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  public tokenrefresh(): Observable {\n    return this.http.get(`${this.baseUrl}tokenrefresh`).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * handle errors to prevent crashes\n   * @param err thrown error by backend\n   * @returns Use observable for better handling\n   */\n  private handleError(err: HttpErrorResponse) {\n    if (err.error instanceof ErrorEvent) {\n      console.log('client error');\n    } else {\n      if (err.error && err.error.body) {\n        console.error(`Backend returned code ${err.status}, ${err.error.message} is:`, err.error.body);\n        return throwError(err.error.body);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned ${err}, body was: `, err);\n        return throwError(err);\n      }\n    }\n    // Not reachbale for now:\n    // return an ErrorObservable with a user-facing error message\n    return throwError('Could not access the API.');\n  }\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dashboard/entry-header/entry-header.component.ts\n            \n            component\n            EntryHeaderComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/entry/entry.component.ts\n            \n            component\n            EntryComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/dashboard/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/new-entry/new-entry.component.ts\n            \n            component\n            NewEntryComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/new-travel-tags/new-travel-tags.component.ts\n            \n            component\n            NewTravelTagsComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/dashboard/travel-tags/travel-tags.component.ts\n            \n            component\n            TravelTagsComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/filter/filter.pipe.ts\n            \n            pipe\n            FilterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/service/error-interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/interceptor.ts\n            \n            interceptor\n            Interceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/api.service.ts\n            \n            class\n            ReturnValueRegister\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/api.service.ts\n            \n            class\n            Token\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/api.service.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/api.service.ts\n            \n            injectable\n            ApiService\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/shared/blog.service.ts\n            \n            class\n            Entry\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/blog.service.ts\n            \n            injectable\n            BlogService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/blog.service.ts\n            \n            interface\n            TravelBlogModel\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            @angular/cdk : ^8.1.2\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            jwt-decode : ^2.2.0\n        \n            ngx-bootstrap : ^5.1.0\n        \n            ngx-toastr : ^10.0.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTravelBlogApp\nThis project was generated with Angular CLI version 7.3.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nInterceptor\n\nInterceptor\n\nAppModule -->\n\nInterceptor->AppModule\n\n\n\n\n\nEntryComponent\n\nEntryComponent\n\nDashboardModule -->\n\nEntryComponent->DashboardModule\n\n\n\n\n\nEntryHeaderComponent\n\nEntryHeaderComponent\n\nDashboardModule -->\n\nEntryHeaderComponent->DashboardModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nDashboardModule -->\n\nFilterPipe->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nDashboardModule -->\n\nHomeComponent->DashboardModule\n\n\n\n\n\nNewEntryComponent\n\nNewEntryComponent\n\nDashboardModule -->\n\nNewEntryComponent->DashboardModule\n\n\n\n\n\nNewTravelTagsComponent\n\nNewTravelTagsComponent\n\nDashboardModule -->\n\nNewTravelTagsComponent->DashboardModule\n\n\n\n\n\nTravelTagsComponent\n\nTravelTagsComponent\n\nDashboardModule -->\n\nTravelTagsComponent->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
